{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport Color from 'color';\nimport CardSheet from \"./CardSheet\";\nimport { PanGestureHandler, GestureState } from \"../GestureHandler\";\nimport CardAnimationContext from \"../../utils/CardAnimationContext\";\nimport getDistanceForDirection from \"../../utils/getDistanceForDirection\";\nimport getInvertedMultiplier from \"../../utils/getInvertedMultiplier\";\nimport memoize from \"../../utils/memoize\";\nvar GESTURE_VELOCITY_IMPACT = 0.3;\nvar TRUE = 1;\nvar FALSE = 0;\nvar GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nvar GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\nvar useNativeDriver = Platform.OS !== 'web';\nvar Card = function (_React$Component) {\n  _inherits(Card, _React$Component);\n  var _super = _createSuper(Card);\n  function Card() {\n    var _this;\n    _classCallCheck(this, Card);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"isClosing\", new Animated.Value(FALSE));\n    _defineProperty(_assertThisInitialized(_this), \"inverted\", new Animated.Value(getInvertedMultiplier(_this.props.gestureDirection)));\n    _defineProperty(_assertThisInitialized(_this), \"layout\", {\n      width: new Animated.Value(_this.props.layout.width),\n      height: new Animated.Value(_this.props.layout.height)\n    });\n    _defineProperty(_assertThisInitialized(_this), \"isSwiping\", new Animated.Value(FALSE));\n    _defineProperty(_assertThisInitialized(_this), \"interactionHandle\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"pendingGestureCallback\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"animate\", function (_ref) {\n      var closing = _ref.closing,\n        velocity = _ref.velocity;\n      var _this$props2 = _this.props,\n        gesture = _this$props2.gesture,\n        transitionSpec = _this$props2.transitionSpec,\n        onOpen = _this$props2.onOpen,\n        onClose = _this$props2.onClose,\n        onTransitionStart = _this$props2.onTransitionStart;\n      var toValue = _this.getAnimateToValue(_objectSpread({}, _this.props, {\n        closing: closing\n      }));\n      var spec = closing ? transitionSpec.close : transitionSpec.open;\n      var animation = spec.animation === 'spring' ? Animated.spring : Animated.timing;\n      _this.setPointerEventsEnabled(!closing);\n      _this.handleStartInteraction();\n      clearTimeout(_this.pendingGestureCallback);\n      onTransitionStart === null || onTransitionStart === void 0 ? void 0 : onTransitionStart({\n        closing: closing\n      });\n      animation(gesture, _objectSpread({}, spec.config, {\n        velocity: velocity,\n        toValue: toValue,\n        useNativeDriver: useNativeDriver,\n        isInteraction: false\n      })).start(function (_ref2) {\n        var finished = _ref2.finished;\n        _this.handleEndInteraction();\n        clearTimeout(_this.pendingGestureCallback);\n        if (finished) {\n          if (closing) {\n            onClose();\n          } else {\n            onOpen();\n          }\n        }\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getAnimateToValue\", function (_ref3) {\n      var closing = _ref3.closing,\n        layout = _ref3.layout,\n        gestureDirection = _ref3.gestureDirection;\n      if (!closing) {\n        return 0;\n      }\n      return getDistanceForDirection(layout, gestureDirection);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"setPointerEventsEnabled\", function (enabled) {\n      var _this$contentRef$curr;\n      var pointerEvents = enabled ? 'box-none' : 'none';\n      (_this$contentRef$curr = _this.contentRef.current) === null || _this$contentRef$curr === void 0 ? void 0 : _this$contentRef$curr.setNativeProps({\n        pointerEvents: pointerEvents\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleStartInteraction\", function () {\n      if (_this.interactionHandle === undefined) {\n        _this.interactionHandle = InteractionManager.createInteractionHandle();\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleEndInteraction\", function () {\n      if (_this.interactionHandle !== undefined) {\n        InteractionManager.clearInteractionHandle(_this.interactionHandle);\n        _this.interactionHandle = undefined;\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleGestureStateChange\", function (_ref4) {\n      var nativeEvent = _ref4.nativeEvent;\n      var _this$props3 = _this.props,\n        layout = _this$props3.layout,\n        onClose = _this$props3.onClose,\n        onGestureBegin = _this$props3.onGestureBegin,\n        onGestureCanceled = _this$props3.onGestureCanceled,\n        onGestureEnd = _this$props3.onGestureEnd,\n        gestureDirection = _this$props3.gestureDirection,\n        gestureVelocityImpact = _this$props3.gestureVelocityImpact;\n      switch (nativeEvent.state) {\n        case GestureState.BEGAN:\n          _this.isSwiping.setValue(TRUE);\n          _this.handleStartInteraction();\n          onGestureBegin === null || onGestureBegin === void 0 ? void 0 : onGestureBegin();\n          break;\n        case GestureState.CANCELLED:\n          {\n            _this.isSwiping.setValue(FALSE);\n            _this.handleEndInteraction();\n            var velocity = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? nativeEvent.velocityY : nativeEvent.velocityX;\n            _this.animate({\n              closing: _this.props.closing,\n              velocity: velocity\n            });\n            onGestureCanceled === null || onGestureCanceled === void 0 ? void 0 : onGestureCanceled();\n            break;\n          }\n        case GestureState.END:\n          {\n            _this.isSwiping.setValue(FALSE);\n            var distance;\n            var translation;\n            var _velocity;\n            if (gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted') {\n              distance = layout.height;\n              translation = nativeEvent.translationY;\n              _velocity = nativeEvent.velocityY;\n            } else {\n              distance = layout.width;\n              translation = nativeEvent.translationX;\n              _velocity = nativeEvent.velocityX;\n            }\n            var closing = (translation + _velocity * gestureVelocityImpact) * getInvertedMultiplier(gestureDirection) > distance / 2 ? _velocity !== 0 || translation !== 0 : _this.props.closing;\n            _this.animate({\n              closing: closing,\n              velocity: _velocity\n            });\n            if (closing) {\n              _this.pendingGestureCallback = setTimeout(onClose, 32);\n            }\n            onGestureEnd === null || onGestureEnd === void 0 ? void 0 : onGestureEnd();\n            break;\n          }\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getInterpolatedStyle\", memoize(function (styleInterpolator, index, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) {\n      return styleInterpolator({\n        index: index,\n        current: {\n          progress: current\n        },\n        next: next && {\n          progress: next\n        },\n        closing: _this.isClosing,\n        swiping: _this.isSwiping,\n        inverted: _this.inverted,\n        layouts: {\n          screen: layout\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft\n        }\n      });\n    }));\n    _defineProperty(_assertThisInitialized(_this), \"getCardAnimationContext\", memoize(function (index, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) {\n      return {\n        index: index,\n        current: {\n          progress: current\n        },\n        next: next && {\n          progress: next\n        },\n        closing: _this.isClosing,\n        swiping: _this.isSwiping,\n        inverted: _this.inverted,\n        layouts: {\n          screen: layout\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft\n        }\n      };\n    }));\n    _defineProperty(_assertThisInitialized(_this), \"contentRef\", React.createRef());\n    return _this;\n  }\n  _createClass(Card, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animate({\n        closing: this.props.closing\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props4 = this.props,\n        layout = _this$props4.layout,\n        gestureDirection = _this$props4.gestureDirection,\n        closing = _this$props4.closing;\n      var width = layout.width,\n        height = layout.height;\n      if (width !== prevProps.layout.width) {\n        this.layout.width.setValue(width);\n      }\n      if (height !== prevProps.layout.height) {\n        this.layout.height.setValue(height);\n      }\n      if (gestureDirection !== prevProps.gestureDirection) {\n        this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n      }\n      if (this.getAnimateToValue(this.props) !== this.getAnimateToValue(prevProps)) {\n        this.animate({\n          closing: closing\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.handleEndInteraction();\n    }\n  }, {\n    key: \"gestureActivationCriteria\",\n    value: function gestureActivationCriteria() {\n      var _this$props5 = this.props,\n        layout = _this$props5.layout,\n        gestureDirection = _this$props5.gestureDirection,\n        gestureResponseDistance = _this$props5.gestureResponseDistance;\n      var distance = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? (gestureResponseDistance === null || gestureResponseDistance === void 0 ? void 0 : gestureResponseDistance.vertical) !== undefined ? gestureResponseDistance.vertical : GESTURE_RESPONSE_DISTANCE_VERTICAL : (gestureResponseDistance === null || gestureResponseDistance === void 0 ? void 0 : gestureResponseDistance.horizontal) !== undefined ? gestureResponseDistance.horizontal : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n      if (gestureDirection === 'vertical') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: 5,\n          hitSlop: {\n            bottom: -layout.height + distance\n          }\n        };\n      } else if (gestureDirection === 'vertical-inverted') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: -5,\n          hitSlop: {\n            top: -layout.height + distance\n          }\n        };\n      } else {\n        var hitSlop = -layout.width + distance;\n        var invertedMultiplier = getInvertedMultiplier(gestureDirection);\n        if (invertedMultiplier === 1) {\n          return {\n            minOffsetX: 5,\n            maxDeltaY: 20,\n            hitSlop: {\n              right: hitSlop\n            }\n          };\n        } else {\n          return {\n            minOffsetX: -5,\n            maxDeltaY: 20,\n            hitSlop: {\n              left: hitSlop\n            }\n          };\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        styleInterpolator = _this$props.styleInterpolator,\n        index = _this$props.index,\n        current = _this$props.current,\n        gesture = _this$props.gesture,\n        next = _this$props.next,\n        layout = _this$props.layout,\n        insets = _this$props.insets,\n        overlay = _this$props.overlay,\n        overlayEnabled = _this$props.overlayEnabled,\n        shadowEnabled = _this$props.shadowEnabled,\n        gestureEnabled = _this$props.gestureEnabled,\n        gestureDirection = _this$props.gestureDirection,\n        pageOverflowEnabled = _this$props.pageOverflowEnabled,\n        children = _this$props.children,\n        customContainerStyle = _this$props.containerStyle,\n        contentStyle = _this$props.contentStyle,\n        rest = _objectWithoutProperties(_this$props, [\"styleInterpolator\", \"index\", \"current\", \"gesture\", \"next\", \"layout\", \"insets\", \"overlay\", \"overlayEnabled\", \"shadowEnabled\", \"gestureEnabled\", \"gestureDirection\", \"pageOverflowEnabled\", \"children\", \"containerStyle\", \"contentStyle\"]);\n      var interpolatedStyle = this.getInterpolatedStyle(styleInterpolator, index, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n      var animationContext = this.getCardAnimationContext(index, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n      var containerStyle = interpolatedStyle.containerStyle,\n        cardStyle = interpolatedStyle.cardStyle,\n        overlayStyle = interpolatedStyle.overlayStyle,\n        shadowStyle = interpolatedStyle.shadowStyle;\n      var handleGestureEvent = gestureEnabled ? Animated.event([{\n        nativeEvent: gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? {\n          translationY: gesture\n        } : {\n          translationX: gesture\n        }\n      }], {\n        useNativeDriver: useNativeDriver\n      }) : undefined;\n      var _StyleSheet$flatten = StyleSheet.flatten(contentStyle || {}),\n        backgroundColor = _StyleSheet$flatten.backgroundColor;\n      var isTransparent = backgroundColor ? Color(backgroundColor).alpha() === 0 : false;\n      return React.createElement(CardAnimationContext.Provider, {\n        value: animationContext\n      }, React.createElement(Animated.View, {\n        style: {\n          opacity: current\n        },\n        collapsable: false\n      }), React.createElement(View, _extends({\n        pointerEvents: \"box-none\"\n      }, rest), overlayEnabled ? React.createElement(View, {\n        pointerEvents: \"box-none\",\n        style: StyleSheet.absoluteFill\n      }, overlay({\n        style: overlayStyle\n      })) : null, React.createElement(Animated.View, {\n        style: [styles.container, containerStyle, customContainerStyle],\n        pointerEvents: \"box-none\"\n      }, React.createElement(PanGestureHandler, _extends({\n        enabled: layout.width !== 0 && gestureEnabled,\n        onGestureEvent: handleGestureEvent,\n        onHandlerStateChange: this.handleGestureStateChange\n      }, this.gestureActivationCriteria()), React.createElement(Animated.View, {\n        style: [styles.container, cardStyle]\n      }, shadowEnabled && shadowStyle && !isTransparent ? React.createElement(Animated.View, {\n        style: [styles.shadow, gestureDirection === 'horizontal' ? [styles.shadowHorizontal, styles.shadowLeft] : gestureDirection === 'horizontal-inverted' ? [styles.shadowHorizontal, styles.shadowRight] : gestureDirection === 'vertical' ? [styles.shadowVertical, styles.shadowTop] : [styles.shadowVertical, styles.shadowBottom], {\n          backgroundColor: backgroundColor\n        }, shadowStyle],\n        pointerEvents: \"none\"\n      }) : null, React.createElement(CardSheet, {\n        ref: this.contentRef,\n        enabled: pageOverflowEnabled,\n        layout: layout,\n        style: contentStyle\n      }, children))))));\n    }\n  }]);\n  return Card;\n}(React.Component);\nexport { Card as default };\n_defineProperty(Card, \"defaultProps\", {\n  overlayEnabled: Platform.OS !== 'ios',\n  shadowEnabled: true,\n  gestureEnabled: true,\n  gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n  overlay: function overlay(_ref5) {\n    var style = _ref5.style;\n    return style ? React.createElement(Animated.View, {\n      pointerEvents: \"none\",\n      style: [styles.overlay, style]\n    }) : null;\n  }\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: {\n      width: -1,\n      height: 1\n    }\n  },\n  shadowLeft: {\n    left: 0\n  },\n  shadowRight: {\n    right: 0\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: {\n      width: 1,\n      height: -1\n    }\n  },\n  shadowTop: {\n    top: 0\n  },\n  shadowBottom: {\n    bottom: 0\n  }\n});","map":{"version":3,"names":["React","Animated","View","StyleSheet","Platform","InteractionManager","Color","CardSheet","PanGestureHandler","GestureState","CardAnimationContext","getDistanceForDirection","getInvertedMultiplier","memoize","GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","OS","Card","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","Value","props","gestureDirection","width","layout","height","_ref","closing","velocity","_this$props2","gesture","transitionSpec","onOpen","onClose","onTransitionStart","toValue","getAnimateToValue","_objectSpread","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","config","isInteraction","start","_ref2","finished","handleEndInteraction","_ref3","enabled","_this$contentRef$curr","pointerEvents","contentRef","current","setNativeProps","interactionHandle","undefined","createInteractionHandle","clearInteractionHandle","_ref4","nativeEvent","_this$props3","onGestureBegin","onGestureCanceled","onGestureEnd","gestureVelocityImpact","state","BEGAN","isSwiping","setValue","CANCELLED","velocityY","velocityX","animate","END","distance","translation","translationY","translationX","setTimeout","styleInterpolator","index","next","insetTop","insetRight","insetBottom","insetLeft","progress","isClosing","swiping","inverted","layouts","screen","insets","top","right","bottom","left","createRef","_createClass","key","value","componentDidMount","componentDidUpdate","prevProps","_this$props4","componentWillUnmount","gestureActivationCriteria","_this$props5","gestureResponseDistance","vertical","horizontal","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","render","_this$props","overlay","overlayEnabled","shadowEnabled","gestureEnabled","pageOverflowEnabled","children","customContainerStyle","containerStyle","contentStyle","rest","_objectWithoutProperties","interpolatedStyle","getInterpolatedStyle","animationContext","getCardAnimationContext","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","_StyleSheet$flatten","flatten","backgroundColor","isTransparent","alpha","createElement","Provider","style","opacity","collapsable","_extends","absoluteFill","styles","container","onGestureEvent","onHandlerStateChange","handleGestureStateChange","shadow","shadowHorizontal","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom","ref","Component","default","_ref5","create","flex","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"sources":["/Users/wesli/Documents/GitHub/stuport2/node_modules/react-navigation-stack/lib/module/vendor/views/Stack/Card.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  StyleSheet,\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  Platform,\n  InteractionManager,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\nimport Color from 'color';\n\nimport CardSheet from './CardSheet';\nimport {\n  PanGestureHandler,\n  GestureState,\n  PanGestureHandlerGestureEvent,\n} from '../GestureHandler';\nimport CardAnimationContext from '../../utils/CardAnimationContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\nimport memoize from '../../utils/memoize';\nimport type {\n  TransitionSpec,\n  StackCardStyleInterpolator,\n  GestureDirection,\n  Layout,\n} from '../../types';\n\ntype Props = ViewProps & {\n  index: number;\n  closing: boolean;\n  next?: Animated.AnimatedInterpolation;\n  current: Animated.AnimatedInterpolation;\n  gesture: Animated.Value;\n  layout: Layout;\n  insets: EdgeInsets;\n  pageOverflowEnabled: boolean;\n  gestureDirection: GestureDirection;\n  onOpen: () => void;\n  onClose: () => void;\n  onTransitionStart?: (props: { closing: boolean }) => void;\n  onGestureBegin?: () => void;\n  onGestureCanceled?: () => void;\n  onGestureEnd?: () => void;\n  children: React.ReactNode;\n  overlay: (props: {\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  }) => React.ReactNode;\n  overlayEnabled: boolean;\n  shadowEnabled: boolean;\n  gestureEnabled: boolean;\n  gestureResponseDistance?: {\n    vertical?: number;\n    horizontal?: number;\n  };\n  gestureVelocityImpact: number;\n  transitionSpec: {\n    open: TransitionSpec;\n    close: TransitionSpec;\n  };\n  styleInterpolator: StackCardStyleInterpolator;\n  containerStyle?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nconst GESTURE_VELOCITY_IMPACT = 0.3;\n\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nexport default class Card extends React.Component<Props> {\n  static defaultProps = {\n    overlayEnabled: Platform.OS !== 'ios',\n    shadowEnabled: true,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: ({\n      style,\n    }: {\n      style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    }) =>\n      style ? (\n        <Animated.View pointerEvents=\"none\" style={[styles.overlay, style]} />\n      ) : null,\n  };\n\n  componentDidMount() {\n    this.animate({ closing: this.props.closing });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { layout, gestureDirection, closing } = this.props;\n    const { width, height } = layout;\n\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n    }\n\n    if (\n      this.getAnimateToValue(this.props) !== this.getAnimateToValue(prevProps)\n    ) {\n      // We need to trigger the animation when route was closed\n      // Thr route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({ closing });\n    }\n  }\n\n  componentWillUnmount() {\n    this.handleEndInteraction();\n  }\n\n  private isClosing = new Animated.Value(FALSE);\n\n  private inverted = new Animated.Value(\n    getInvertedMultiplier(this.props.gestureDirection)\n  );\n\n  private layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height),\n  };\n\n  private isSwiping = new Animated.Value(FALSE);\n\n  private interactionHandle: number | undefined;\n\n  private pendingGestureCallback: any;\n\n  private animate = ({\n    closing,\n    velocity,\n  }: {\n    closing: boolean;\n    velocity?: number;\n  }) => {\n    const {\n      gesture,\n      transitionSpec,\n      onOpen,\n      onClose,\n      onTransitionStart,\n    } = this.props;\n\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing,\n    });\n\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n\n    const animation =\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n\n    clearTimeout(this.pendingGestureCallback);\n\n    onTransitionStart?.({ closing });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false,\n    }).start(({ finished }) => {\n      this.handleEndInteraction();\n\n      clearTimeout(this.pendingGestureCallback);\n\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n      }\n    });\n  };\n\n  private getAnimateToValue = ({\n    closing,\n    layout,\n    gestureDirection,\n  }: {\n    closing?: boolean;\n    layout: Layout;\n    gestureDirection: GestureDirection;\n  }) => {\n    if (!closing) {\n      return 0;\n    }\n\n    return getDistanceForDirection(layout, gestureDirection);\n  };\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.contentRef.current?.setNativeProps({ pointerEvents });\n  };\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    const {\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact,\n    } = this.props;\n\n    switch (nativeEvent.state) {\n      case GestureState.BEGAN:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin?.();\n        break;\n      case GestureState.CANCELLED: {\n        this.isSwiping.setValue(FALSE);\n        this.handleEndInteraction();\n\n        const velocity =\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n            ? nativeEvent.velocityY\n            : nativeEvent.velocityX;\n\n        this.animate({ closing: this.props.closing, velocity });\n\n        onGestureCanceled?.();\n        break;\n      }\n      case GestureState.END: {\n        this.isSwiping.setValue(FALSE);\n\n        let distance;\n        let translation;\n        let velocity;\n\n        if (\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ) {\n          distance = layout.height;\n          translation = nativeEvent.translationY;\n          velocity = nativeEvent.velocityY;\n        } else {\n          distance = layout.width;\n          translation = nativeEvent.translationX;\n          velocity = nativeEvent.velocityX;\n        }\n\n        const closing =\n          (translation + velocity * gestureVelocityImpact) *\n            getInvertedMultiplier(gestureDirection) >\n          distance / 2\n            ? velocity !== 0 || translation !== 0\n            : this.props.closing;\n\n        this.animate({ closing, velocity });\n\n        if (closing) {\n          // We call onClose with a delay to make sure that the animation has already started\n          // This will make sure that the state update caused by this doesn't affect start of animation\n          this.pendingGestureCallback = (setTimeout(\n            onClose,\n            32\n          ) as any) as number;\n        }\n\n        onGestureEnd?.();\n        break;\n      }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  private getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackCardStyleInterpolator,\n      index: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) =>\n      styleInterpolator({\n        index,\n        current: { progress: current },\n        next: next && { progress: next },\n        closing: this.isClosing,\n        swiping: this.isSwiping,\n        inverted: this.inverted,\n        layouts: {\n          screen: layout,\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft,\n        },\n      })\n  );\n\n  // Keep track of the animation context when deps changes.\n  private getCardAnimationContext = memoize(\n    (\n      index: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) => ({\n      index,\n      current: { progress: current },\n      next: next && { progress: next },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout,\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft,\n      },\n    })\n  );\n\n  private gestureActivationCriteria() {\n    const { layout, gestureDirection, gestureResponseDistance } = this.props;\n\n    const distance =\n      gestureDirection === 'vertical' ||\n      gestureDirection === 'vertical-inverted'\n        ? gestureResponseDistance?.vertical !== undefined\n          ? gestureResponseDistance.vertical\n          : GESTURE_RESPONSE_DISTANCE_VERTICAL\n        : gestureResponseDistance?.horizontal !== undefined\n        ? gestureResponseDistance.horizontal\n        : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: { bottom: -layout.height + distance },\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: { top: -layout.height + distance },\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\n\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: { right: hitSlop },\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: { left: hitSlop },\n        };\n      }\n    }\n  }\n\n  private contentRef = React.createRef<View>();\n\n  render() {\n    const {\n      styleInterpolator,\n      index,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      ...rest\n    } = this.props;\n\n    const interpolatedStyle = this.getInterpolatedStyle(\n      styleInterpolator,\n      index,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const animationContext = this.getCardAnimationContext(\n      index,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const {\n      containerStyle,\n      cardStyle,\n      overlayStyle,\n      shadowStyle,\n    } = interpolatedStyle;\n\n    const handleGestureEvent = gestureEnabled\n      ? Animated.event(\n          [\n            {\n              nativeEvent:\n                gestureDirection === 'vertical' ||\n                gestureDirection === 'vertical-inverted'\n                  ? { translationY: gesture }\n                  : { translationX: gesture },\n            },\n          ],\n          { useNativeDriver }\n        )\n      : undefined;\n\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent = backgroundColor\n      ? Color(backgroundColor).alpha() === 0\n      : false;\n\n    return (\n      <CardAnimationContext.Provider value={animationContext}>\n        <Animated.View\n          style={{\n            // This is a dummy style that doesn't actually change anything visually.\n            // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\n            // If we disable animations and hide header, it could end up making the value unused.\n            // So we have this dummy style that will always be used regardless of what else changed.\n            opacity: current,\n          }}\n          // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\n          collapsable={false}\n        />\n        <View pointerEvents=\"box-none\" {...rest}>\n          {overlayEnabled ? (\n            <View pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n              {overlay({ style: overlayStyle })}\n            </View>\n          ) : null}\n          <Animated.View\n            style={[styles.container, containerStyle, customContainerStyle]}\n            pointerEvents=\"box-none\"\n          >\n            <PanGestureHandler\n              enabled={layout.width !== 0 && gestureEnabled}\n              onGestureEvent={handleGestureEvent}\n              onHandlerStateChange={this.handleGestureStateChange}\n              {...this.gestureActivationCriteria()}\n            >\n              <Animated.View style={[styles.container, cardStyle]}>\n                {shadowEnabled && shadowStyle && !isTransparent ? (\n                  <Animated.View\n                    style={[\n                      styles.shadow,\n                      gestureDirection === 'horizontal'\n                        ? [styles.shadowHorizontal, styles.shadowLeft]\n                        : gestureDirection === 'horizontal-inverted'\n                        ? [styles.shadowHorizontal, styles.shadowRight]\n                        : gestureDirection === 'vertical'\n                        ? [styles.shadowVertical, styles.shadowTop]\n                        : [styles.shadowVertical, styles.shadowBottom],\n                      { backgroundColor },\n                      shadowStyle,\n                    ]}\n                    pointerEvents=\"none\"\n                  />\n                ) : null}\n                <CardSheet\n                  ref={this.contentRef}\n                  enabled={pageOverflowEnabled}\n                  layout={layout}\n                  style={contentStyle}\n                >\n                  {children}\n                </CardSheet>\n              </Animated.View>\n            </PanGestureHandler>\n          </Animated.View>\n        </View>\n      </CardAnimationContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3,\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: { width: -1, height: 1 },\n  },\n  shadowLeft: {\n    left: 0,\n  },\n  shadowRight: {\n    right: 0,\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: { width: 1, height: -1 },\n  },\n  shadowTop: {\n    top: 0,\n  },\n  shadowBottom: {\n    bottom: 0,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}