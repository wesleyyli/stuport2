{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport GestureHandler from \"./GestureHandler\";\nimport { TEST_MAX_IF_NOT_NAN } from \"./utils\";\nvar DiscreteGestureHandler = function (_GestureHandler) {\n  _inherits(DiscreteGestureHandler, _GestureHandler);\n  var _super = _createSuper(DiscreteGestureHandler);\n  function DiscreteGestureHandler() {\n    _classCallCheck(this, DiscreteGestureHandler);\n    return _super.apply(this, arguments);\n  }\n  _createClass(DiscreteGestureHandler, [{\n    key: \"shouldFailUnderCustomCriteria\",\n    value: function shouldFailUnderCustomCriteria(_ref, _ref2) {\n      var x = _ref.x,\n        y = _ref.y,\n        deltaX = _ref.deltaX,\n        deltaY = _ref.deltaY;\n      var maxDeltaX = _ref2.maxDeltaX,\n        maxDeltaY = _ref2.maxDeltaY,\n        maxDistSq = _ref2.maxDistSq,\n        shouldCancelWhenOutside = _ref2.shouldCancelWhenOutside;\n      if (shouldCancelWhenOutside) {\n        if (!this.isPointInView({\n          x: x,\n          y: y\n        })) {\n          return true;\n        }\n      }\n      return TEST_MAX_IF_NOT_NAN(Math.abs(deltaX), maxDeltaX) || TEST_MAX_IF_NOT_NAN(Math.abs(deltaY), maxDeltaY) || TEST_MAX_IF_NOT_NAN(Math.abs(deltaY * deltaY + deltaX * deltaX), maxDistSq);\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent(_ref3) {\n      var x = _ref3.x,\n        y = _ref3.y;\n      return {\n        absoluteX: x,\n        absoluteY: y,\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(_ref4, recognizer, _ref5) {\n      var minPointers = _ref4.minPointers,\n        maxPointers = _ref4.maxPointers,\n        maxDist = _ref4.maxDist,\n        maxDeltaX = _ref4.maxDeltaX,\n        maxDeltaY = _ref4.maxDeltaY,\n        maxDistSq = _ref4.maxDistSq,\n        shouldCancelWhenOutside = _ref4.shouldCancelWhenOutside;\n      var pointerLength = _ref5.maxPointers,\n        center = _ref5.center,\n        deltaX = _ref5.deltaX,\n        deltaY = _ref5.deltaY,\n        props = _objectWithoutProperties(_ref5, [\"maxPointers\", \"center\", \"deltaX\", \"deltaY\"]);\n      var validPointerCount = pointerLength >= minPointers && pointerLength <= maxPointers;\n      if (this.shouldFailUnderCustomCriteria(_objectSpread(_objectSpread({}, center), {}, {\n        deltaX: deltaX,\n        deltaY: deltaY\n      }), {\n        maxDeltaX: maxDeltaX,\n        maxDeltaY: maxDeltaY,\n        maxDistSq: maxDistSq,\n        shouldCancelWhenOutside: shouldCancelWhenOutside\n      }) || !validPointerCount && this.isGestureRunning) {\n        return {\n          failed: true\n        };\n      }\n      return {\n        success: validPointerCount\n      };\n    }\n  }, {\n    key: \"isDiscrete\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"shouldEnableGestureOnSetup\",\n    get: function get() {\n      return true;\n    }\n  }]);\n  return DiscreteGestureHandler;\n}(GestureHandler);\nexport default DiscreteGestureHandler;","map":{"version":3,"names":["GestureHandler","TEST_MAX_IF_NOT_NAN","DiscreteGestureHandler","_GestureHandler","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","shouldFailUnderCustomCriteria","_ref","_ref2","x","y","deltaX","deltaY","maxDeltaX","maxDeltaY","maxDistSq","shouldCancelWhenOutside","isPointInView","Math","abs","transformNativeEvent","_ref3","absoluteX","absoluteY","isGestureEnabledForEvent","_ref4","recognizer","_ref5","minPointers","maxPointers","maxDist","pointerLength","center","props","_objectWithoutProperties","validPointerCount","_objectSpread","isGestureRunning","failed","success","get"],"sources":["/Users/wesli/Documents/GitHub/stuport2/node_modules/react-native-gesture-handler/web/DiscreteGestureHandler.js"],"sourcesContent":["import GestureHandler from './GestureHandler';\nimport { TEST_MAX_IF_NOT_NAN } from './utils';\n\nclass DiscreteGestureHandler extends GestureHandler {\n  get isDiscrete() {\n    return true;\n  }\n\n  get shouldEnableGestureOnSetup() {\n    return true;\n  }\n\n  shouldFailUnderCustomCriteria(\n    { x, y, deltaX, deltaY },\n    { maxDeltaX, maxDeltaY, maxDistSq, shouldCancelWhenOutside }\n  ) {\n    if (shouldCancelWhenOutside) {\n      if (!this.isPointInView({ x, y })) {\n        return true;\n      }\n    }\n    return (\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaX), maxDeltaX) ||\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaY), maxDeltaY) ||\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaY * deltaY + deltaX * deltaX), maxDistSq)\n    );\n  }\n\n  transformNativeEvent({ x, y }) {\n    return {\n      absoluteX: x,\n      absoluteY: y,\n      x,\n      y,\n    };\n  }\n\n  isGestureEnabledForEvent(\n    { minPointers, maxPointers, maxDist, maxDeltaX, maxDeltaY, maxDistSq, shouldCancelWhenOutside },\n    recognizer,\n    { maxPointers: pointerLength, center, deltaX, deltaY, ...props }\n  ) {\n    const validPointerCount = pointerLength >= minPointers && pointerLength <= maxPointers;\n\n    if (\n      this.shouldFailUnderCustomCriteria(\n        { ...center, deltaX, deltaY },\n        {\n          maxDeltaX,\n          maxDeltaY,\n          maxDistSq,\n          shouldCancelWhenOutside,\n        }\n      ) ||\n      // A user probably won't land a multi-pointer tap on the first tick (so we cannot just cancel each time)\n      // but if the gesture is running and the user adds or subtracts another pointer then it should fail.\n      (!validPointerCount && this.isGestureRunning)\n    ) {\n      return { failed: true };\n    }\n\n    return { success: validPointerCount };\n  }\n}\n\nexport default DiscreteGestureHandler;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}