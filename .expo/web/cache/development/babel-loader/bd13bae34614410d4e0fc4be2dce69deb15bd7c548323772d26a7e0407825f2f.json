{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { RCTDeviceEventEmitter, RCTEventEmitter } from \"./nativeEmitters\";\nvar SyntheticPlatformEmitter = function () {\n  function SyntheticPlatformEmitter() {\n    _classCallCheck(this, SyntheticPlatformEmitter);\n    this._emitter = new RCTEventEmitter(RCTDeviceEventEmitter.sharedSubscriber);\n  }\n  _createClass(SyntheticPlatformEmitter, [{\n    key: \"emit\",\n    value: function emit(eventName, props) {\n      this._emitter.emit(eventName, props);\n    }\n  }]);\n  return SyntheticPlatformEmitter;\n}();\nexport default new SyntheticPlatformEmitter();","map":{"version":3,"names":["RCTDeviceEventEmitter","RCTEventEmitter","SyntheticPlatformEmitter","_classCallCheck","_emitter","sharedSubscriber","_createClass","key","value","emit","eventName","props"],"sources":["/Users/wesli/Documents/GitHub/stuport2/node_modules/@unimodules/react-native-adapter/src/SyntheticPlatformEmitter.ts"],"sourcesContent":["import { RCTDeviceEventEmitter, RCTEventEmitter } from './nativeEmitters';\n\n/**\n * This emitter is used for sending synthetic native events to listeners\n * registered in the API layer with `NativeEventEmitter`.\n */\nclass SyntheticPlatformEmitter {\n  _emitter = new RCTEventEmitter(RCTDeviceEventEmitter.sharedSubscriber);\n\n  emit(eventName: string, props: any): void {\n    this._emitter.emit(eventName, props);\n  }\n}\n\nexport default new SyntheticPlatformEmitter();\n"],"mappings":";;AAAA,SAASA,qBAAqB,EAAEC,eAAe;AAA2B,IAMpEC,wBAAwB;EAA9B,SAAAA,yBAAA;IAAAC,eAAA,OAAAD,wBAAA;IACE,KAAAE,QAAQ,GAAG,IAAIH,eAAe,CAACD,qBAAqB,CAACK,gBAAgB,CAAC;EAKxE;EAACC,YAAA,CAAAJ,wBAAA;IAAAK,GAAA;IAAAC,KAAA,WAAAC,KAHMC,SAAiB,EAAEC,KAAU;MAChC,IAAI,CAACP,QAAQ,CAACK,IAAI,CAACC,SAAS,EAAEC,KAAK,CAAC;IACtC;EAAC;EAAA,OAAAT,wBAAA;AAAA;AAGH,eAAe,IAAIA,wBAAwB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}