{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\nvar EventTypes = ['url'];\nvar listeners = [];\nexport default {\n  addEventListener: function addEventListener(type, listener) {\n    invariant(EventTypes.indexOf(type) !== -1, \"Linking.addEventListener(): \" + type + \" is not a valid event\");\n    var nativeListener = function nativeListener(nativeEvent) {\n      return listener({\n        url: window.location.href,\n        nativeEvent: nativeEvent\n      });\n    };\n    listeners.push({\n      listener: listener,\n      nativeListener: nativeListener\n    });\n    window.addEventListener('message', nativeListener, false);\n  },\n  removeEventListener: function removeEventListener(type, listener) {\n    invariant(EventTypes.indexOf(type) !== -1, \"Linking.removeEventListener(): \" + type + \" is not a valid event.\");\n    var listenerIndex = listeners.findIndex(function (pair) {\n      return pair.listener === listener;\n    });\n    invariant(listenerIndex !== -1, 'Linking.removeEventListener(): cannot remove an unregistered event listener.');\n    var nativeListener = listeners[listenerIndex].nativeListener;\n    window.removeEventListener('message', nativeListener, false);\n    listeners.splice(listenerIndex, 1);\n  },\n  canOpenURL: function canOpenURL(url) {\n    return _regeneratorRuntime.async(function canOpenURL$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", true);\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getInitialURL: function getInitialURL() {\n    return _regeneratorRuntime.async(function getInitialURL$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (canUseDOM) {\n              _context2.next = 2;\n              break;\n            }\n            return _context2.abrupt(\"return\", '');\n          case 2:\n            return _context2.abrupt(\"return\", window.location.href);\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  openURL: function openURL(url) {\n    return _regeneratorRuntime.async(function openURL$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (canUseDOM) {\n              window.location = new URL(url, window.location).toString();\n            }\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};","map":{"version":3,"names":["canUseDOM","invariant","EventTypes","listeners","addEventListener","type","listener","indexOf","nativeListener","nativeEvent","url","window","location","href","push","removeEventListener","listenerIndex","findIndex","pair","splice","canOpenURL","_regeneratorRuntime","async","canOpenURL$","_context","prev","next","abrupt","stop","Promise","getInitialURL","getInitialURL$","_context2","openURL","openURL$","_context3","URL","toString"],"sources":["/Users/wesli/Documents/GitHub/stuport2/node_modules/expo-linking/src/ExpoLinking.web.ts"],"sourcesContent":["import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\n\nimport { NativeURLListener, URLListener } from './Linking.types';\n\nconst EventTypes = ['url'];\n\nconst listeners: { listener: URLListener; nativeListener: NativeURLListener }[] = [];\n\nexport default {\n  addEventListener(type: 'url', listener: URLListener): void {\n    invariant(\n      EventTypes.indexOf(type) !== -1,\n      `Linking.addEventListener(): ${type} is not a valid event`\n    );\n    const nativeListener: NativeURLListener = nativeEvent =>\n      listener({ url: window.location.href, nativeEvent });\n    listeners.push({ listener, nativeListener });\n    window.addEventListener('message', nativeListener, false);\n  },\n\n  removeEventListener(type: 'url', listener: URLListener): void {\n    invariant(\n      EventTypes.indexOf(type) !== -1,\n      `Linking.removeEventListener(): ${type} is not a valid event.`\n    );\n    const listenerIndex = listeners.findIndex(pair => pair.listener === listener);\n    invariant(\n      listenerIndex !== -1,\n      'Linking.removeEventListener(): cannot remove an unregistered event listener.'\n    );\n    const nativeListener = listeners[listenerIndex].nativeListener;\n    window.removeEventListener('message', nativeListener, false);\n    listeners.splice(listenerIndex, 1);\n  },\n\n  async canOpenURL(url: string): Promise<boolean> {\n    // In reality this should be able to return false for links like `chrome://` on chrome.\n    return true;\n  },\n\n  async getInitialURL(): Promise<string> {\n    if (!canUseDOM) return '';\n    return window.location.href;\n  },\n\n  async openURL(url: string): Promise<void> {\n    if (canUseDOM) {\n      // @ts-ignore\n      window.location = new URL(url, window.location).toString();\n    }\n  },\n};\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,+BAA+B;AACzD,OAAOC,SAAS,MAAM,oBAAoB;AAI1C,IAAMC,UAAU,GAAG,CAAC,KAAK,CAAC;AAE1B,IAAMC,SAAS,GAAmE,EAAE;AAEpF,eAAe;EACbC,gBAAgB,WAAAA,iBAACC,IAAW,EAAEC,QAAqB;IACjDL,SAAS,CACPC,UAAU,CAACK,OAAO,CAACF,IAAI,CAAC,KAAK,CAAC,CAAC,mCACAA,IAAI,2BACpC;IACD,IAAMG,cAAc,GAAsB,SAApCA,cAAcA,CAAsBC,WAAW;MAAA,OACnDH,QAAQ,CAAC;QAAEI,GAAG,EAAEC,MAAM,CAACC,QAAQ,CAACC,IAAI;QAAEJ,WAAW,EAAXA;MAAW,CAAE,CAAC;IAAA;IACtDN,SAAS,CAACW,IAAI,CAAC;MAAER,QAAQ,EAARA,QAAQ;MAAEE,cAAc,EAAdA;IAAc,CAAE,CAAC;IAC5CG,MAAM,CAACP,gBAAgB,CAAC,SAAS,EAAEI,cAAc,EAAE,KAAK,CAAC;EAC3D,CAAC;EAEDO,mBAAmB,WAAAA,oBAACV,IAAW,EAAEC,QAAqB;IACpDL,SAAS,CACPC,UAAU,CAACK,OAAO,CAACF,IAAI,CAAC,KAAK,CAAC,CAAC,sCACGA,IAAI,4BACvC;IACD,IAAMW,aAAa,GAAGb,SAAS,CAACc,SAAS,CAAC,UAAAC,IAAI;MAAA,OAAIA,IAAI,CAACZ,QAAQ,KAAKA,QAAQ;IAAA,EAAC;IAC7EL,SAAS,CACPe,aAAa,KAAK,CAAC,CAAC,EACpB,8EAA8E,CAC/E;IACD,IAAMR,cAAc,GAAGL,SAAS,CAACa,aAAa,CAAC,CAACR,cAAc;IAC9DG,MAAM,CAACI,mBAAmB,CAAC,SAAS,EAAEP,cAAc,EAAE,KAAK,CAAC;IAC5DL,SAAS,CAACgB,MAAM,CAACH,aAAa,EAAE,CAAC,CAAC;EACpC,CAAC;EAEKI,UAAU,WAAAA,WAACV,GAAW;IAAA,OAAAW,mBAAA,CAAAC,KAAA,UAAAC,YAAAC,QAAA;MAAA;QAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAA,OAAAF,QAAA,CAAAG,MAAA,WAEnB,IAAI;UAAA;UAAA;YAAA,OAAAH,QAAA,CAAAI,IAAA;QAAA;MAAA;IAAA,qBAAAC,OAAA;EAAA;EAGPC,aAAa,WAAAA,cAAA;IAAA,OAAAT,mBAAA,CAAAC,KAAA,UAAAS,eAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAAP,IAAA,GAAAO,SAAA,CAAAN,IAAA;UAAA;YAAA,IACZ1B,SAAS;cAAAgC,SAAA,CAAAN,IAAA;cAAA;YAAA;YAAA,OAAAM,SAAA,CAAAL,MAAA,WAAS,EAAE;UAAA;YAAA,OAAAK,SAAA,CAAAL,MAAA,WAClBhB,MAAM,CAACC,QAAQ,CAACC,IAAI;UAAA;UAAA;YAAA,OAAAmB,SAAA,CAAAJ,IAAA;QAAA;MAAA;IAAA,qBAAAC,OAAA;EAAA;EAGvBI,OAAO,WAAAA,QAACvB,GAAW;IAAA,OAAAW,mBAAA,CAAAC,KAAA,UAAAY,SAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAAV,IAAA,GAAAU,SAAA,CAAAT,IAAA;UAAA;YACvB,IAAI1B,SAAS,EAAE;cAEbW,MAAM,CAACC,QAAQ,GAAG,IAAIwB,GAAG,CAAC1B,GAAG,EAAEC,MAAM,CAACC,QAAQ,CAAC,CAACyB,QAAQ,EAAE;;UAC3D;UAAA;YAAA,OAAAF,SAAA,CAAAP,IAAA;QAAA;MAAA;IAAA,qBAAAC,OAAA;EAAA;CAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}