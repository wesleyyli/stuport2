{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/wesli/Documents/GitHub/stuport2/node_modules/react-native-gesture-handler/gestureHandlerRootHOC.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport GestureHandlerRootView from \"./GestureHandlerRootView\";\nexport default function gestureHandlerRootHOC(Component) {\n  var containerStyles = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  function Wrapper(props) {\n    return React.createElement(GestureHandlerRootView, {\n      style: [styles.container, containerStyles],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, React.createElement(Component, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    })));\n  }\n  Wrapper.displayName = \"gestureHandlerRootHOC(\" + (Component.displayName || Component.name) + \")\";\n  hoistNonReactStatics(Wrapper, Component);\n  return Wrapper;\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","StyleSheet","hoistNonReactStatics","GestureHandlerRootView","gestureHandlerRootHOC","Component","containerStyles","arguments","length","undefined","Wrapper","props","createElement","style","styles","container","__source","fileName","_jsxFileName","lineNumber","columnNumber","_extends","displayName","name","create","flex"],"sources":["/Users/wesli/Documents/GitHub/stuport2/node_modules/react-native-gesture-handler/gestureHandlerRootHOC.js"],"sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport GestureHandlerRootView from './GestureHandlerRootView';\n\nexport default function gestureHandlerRootHOC(\n  Component,\n  containerStyles = undefined\n) {\n  function Wrapper(props) {\n    return (\n      <GestureHandlerRootView style={[styles.container, containerStyles]}>\n        <Component {...props} />\n      </GestureHandlerRootView>\n    );\n  }\n\n  Wrapper.displayName = `gestureHandlerRootHOC(${Component.displayName ||\n    Component.name})`;\n\n  hoistNonReactStatics(Wrapper, Component);\n\n  return Wrapper;\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1 },\n});\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAE1B,OAAOC,oBAAoB,MAAM,yBAAyB;AAC1D,OAAOC,sBAAsB;AAE7B,eAAe,SAASC,qBAAqBA,CAC3CC,SAAS,EAET;EAAA,IADAC,eAAe,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGE,SAAS;EAE3B,SAASC,OAAOA,CAACC,KAAK,EAAE;IACtB,OACEX,KAAA,CAAAY,aAAA,CAACT,sBAAsB;MAACU,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAET,eAAe,CAAE;MAAAU,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACjEpB,KAAA,CAAAY,aAAA,CAACP,SAAS,EAAAgB,QAAA,KAAKV,KAAK;MAAAK,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,CACD;EAE7B;EAEAV,OAAO,CAACY,WAAW,+BAA4BjB,SAAS,CAACiB,WAAW,IAClEjB,SAAS,CAACkB,IAAI,OAAG;EAEnBrB,oBAAoB,CAACQ,OAAO,EAAEL,SAAS,CAAC;EAExC,OAAOK,OAAO;AAChB;AAEA,IAAMI,MAAM,GAAGb,UAAU,CAACuB,MAAM,CAAC;EAC/BT,SAAS,EAAE;IAAEU,IAAI,EAAE;EAAE;AACvB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}