{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React from 'react';\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport { NavigationActions, ThemeProvider, pathUtils, getNavigation, NavigationProvider } from '@react-navigation/core';\nimport invariant from \"./utils/invariant\";\nimport docsUrl from \"./utils/docsUrl\";\nvar urlToPathAndParams = pathUtils.urlToPathAndParams;\nfunction isStateful(props) {\n  return !props.navigation;\n}\nfunction validateProps(props) {\n  if (props.persistenceKey) {\n    console.warn('You passed persistenceKey prop to a navigator. ' + 'The persistenceKey prop was replaced by a more flexible persistence mechanism, ' + 'please see the navigation state persistence docs for more information. ' + 'Passing the persistenceKey prop is a no-op.');\n  }\n  if (isStateful(props)) {\n    return;\n  }\n  var navigation = props.navigation,\n    screenProps = props.screenProps,\n    persistNavigationState = props.persistNavigationState,\n    loadNavigationState = props.loadNavigationState,\n    theme = props.theme,\n    containerProps = _objectWithoutProperties(props, [\"navigation\", \"screenProps\", \"persistNavigationState\", \"loadNavigationState\", \"theme\"]);\n  var keys = Object.keys(containerProps);\n  if (keys.length !== 0) {\n    throw new Error('This navigator has both navigation and container props, so it is ' + \"unclear if it should own its own state. Remove props: \\\"\".concat(keys.join(', '), \"\\\" \") + 'if the navigator should get its state from the navigation prop. If the ' + 'navigator should maintain its own state, do not pass a navigation prop.');\n  }\n  invariant(persistNavigationState === undefined && loadNavigationState === undefined || typeof persistNavigationState === 'function' && typeof loadNavigationState === 'function', 'both persistNavigationState and loadNavigationState must either be undefined, or be functions');\n}\nvar _statefulContainerCount = 0;\nexport function _TESTING_ONLY_reset_container_count() {\n  _statefulContainerCount = 0;\n}\nvar _reactNavigationIsHydratingState = false;\nexport default function createNavigationContainer(Component) {\n  var NavigationContainer = function (_React$Component) {\n    _inherits(NavigationContainer, _React$Component);\n    var _super = _createSuper(NavigationContainer);\n    _createClass(NavigationContainer, null, [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(nextProps) {\n        validateProps(nextProps);\n        return null;\n      }\n    }]);\n    function NavigationContainer(props) {\n      var _this;\n      _classCallCheck(this, NavigationContainer);\n      _this = _super.call(this, props);\n      _defineProperty(_assertThisInitialized(_this), \"subs\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_actionEventSubscribers\", new Set());\n      _defineProperty(_assertThisInitialized(_this), \"_handleOpenURL\", function (_ref) {\n        var url = _ref.url;\n        var _this$props = _this.props,\n          enableURLHandling = _this$props.enableURLHandling,\n          uriPrefix = _this$props.uriPrefix;\n        if (enableURLHandling === false) {\n          return;\n        }\n        var parsedUrl = urlToPathAndParams(url, uriPrefix);\n        if (parsedUrl) {\n          var path = parsedUrl.path,\n            params = parsedUrl.params;\n          var action = Component.router.getActionForPathAndParams(path, params);\n          if (action) {\n            _this.dispatch(action);\n          }\n        }\n      });\n      _defineProperty(_assertThisInitialized(_this), \"_persistNavigationState\", function _callee(nav) {\n        var persistNavigationState;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                persistNavigationState = _this.props.persistNavigationState;\n                if (!persistNavigationState) {\n                  _context.next = 10;\n                  break;\n                }\n                _context.prev = 2;\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(persistNavigationState(nav));\n              case 5:\n                _context.next = 10;\n                break;\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](2);\n                console.warn('Uncaught exception while calling persistNavigationState()! You should handle exceptions thrown from persistNavigationState(), ignoring them may result in undefined behavior.');\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[2, 7]], Promise);\n      });\n      _defineProperty(_assertThisInitialized(_this), \"dispatch\", function (action) {\n        if (_this.props.navigation) {\n          return _this.props.navigation.dispatch(action);\n        }\n        _this._navState = _this._navState || _this.state.nav;\n        var lastNavState = _this._navState;\n        invariant(lastNavState, 'should be set in constructor if stateful');\n        var reducedState = Component.router.getStateForAction(action, lastNavState);\n        var navState = reducedState === null ? lastNavState : reducedState;\n        var dispatchActionEvents = function dispatchActionEvents() {\n          _this._actionEventSubscribers.forEach(function (subscriber) {\n            return subscriber({\n              type: 'action',\n              action: action,\n              state: navState,\n              lastState: lastNavState\n            });\n          });\n        };\n        if (reducedState === null) {\n          dispatchActionEvents();\n          return true;\n        }\n        if (navState !== lastNavState) {\n          _this._navState = navState;\n          _this.setState({\n            nav: navState\n          }, function () {\n            _this._onNavigationStateChange(lastNavState, navState, action);\n            dispatchActionEvents();\n            _this._persistNavigationState(navState);\n          });\n          return true;\n        }\n        dispatchActionEvents();\n        return false;\n      });\n      _defineProperty(_assertThisInitialized(_this), \"_getScreenProps\", function () {\n        return _this.props.screenProps;\n      });\n      _defineProperty(_assertThisInitialized(_this), \"_getTheme\", function () {\n        if (_this.props.theme === 'light' || _this.props.theme === 'dark') {\n          return _this.props.theme;\n        } else if (_this.props.theme === 'no-preference') {\n          return 'light';\n        } else {\n          console.warn(\"Invalid theme provided: \".concat(_this.props.theme, \". Only 'light' and 'dark' are supported. Falling back to 'light'\"));\n          return 'light';\n        }\n      });\n      validateProps(props);\n      _this._initialAction = NavigationActions.init();\n      if (_this._isStateful() && BackHandler && typeof BackHandler.addEventListener === 'function') {\n        _this.subs = BackHandler.addEventListener('hardwareBackPress', function () {\n          if (!_this._isMounted) {\n            _this.subs && _this.subs.remove();\n          } else {\n            return _this.dispatch(NavigationActions.back());\n          }\n        });\n      }\n      _this.state = {\n        nav: _this._isStateful() && !props.loadNavigationState ? Component.router.getStateForAction(_this._initialAction) : null\n      };\n      return _this;\n    }\n    _createClass(NavigationContainer, [{\n      key: \"_renderLoading\",\n      value: function _renderLoading() {\n        return this.props.renderLoadingExperimental ? this.props.renderLoadingExperimental() : null;\n      }\n    }, {\n      key: \"_isStateful\",\n      value: function _isStateful() {\n        return isStateful(this.props);\n      }\n    }, {\n      key: \"_onNavigationStateChange\",\n      value: function _onNavigationStateChange(prevNav, nav, action) {\n        if (typeof this.props.onNavigationStateChange === 'undefined' && this._isStateful() && !!process.env.REACT_NAV_LOGGING) {\n          if (console.group) {\n            console.group('Navigation Dispatch: ');\n            console.log('Action: ', action);\n            console.log('New State: ', nav);\n            console.log('Last State: ', prevNav);\n            console.groupEnd();\n          } else {\n            console.log('Navigation Dispatch: ', {\n              action: action,\n              newState: nav,\n              lastState: prevNav\n            });\n          }\n          return;\n        }\n        if (typeof this.props.onNavigationStateChange === 'function') {\n          this.props.onNavigationStateChange(prevNav, nav, action);\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        if (this._navState === this.state.nav) {\n          this._navState = null;\n        }\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this2 = this;\n        var parsedUrl, userProvidedStartupState, _await$this$getStartu, action, startupState, _parsedUrl, path, params, urlAction, dispatchActions;\n        return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this._isMounted = true;\n                if (this._isStateful()) {\n                  _context2.next = 3;\n                  break;\n                }\n                return _context2.abrupt(\"return\");\n              case 3:\n                if (process.env.NODE_ENV !== 'production' && !this.props.detached) {\n                  if (_statefulContainerCount > 0) {\n                    if (Platform.OS === 'ios') {\n                      console.warn(\"You should only render one navigator explicitly in your app, and other navigators should be rendered by including them in that navigator. Full details at: \".concat(docsUrl('common-mistakes.html#explicitly-rendering-more-than-one-navigator')));\n                    }\n                  }\n                }\n                _statefulContainerCount++;\n                Linking.addEventListener('url', this._handleOpenURL);\n                parsedUrl = null;\n                userProvidedStartupState = null;\n                if (!(this.props.enableURLHandling !== false)) {\n                  _context2.next = 14;\n                  break;\n                }\n                _context2.next = 11;\n                return _regeneratorRuntime.awrap(this.getStartupParams());\n              case 11:\n                _await$this$getStartu = _context2.sent;\n                parsedUrl = _await$this$getStartu.parsedUrl;\n                userProvidedStartupState = _await$this$getStartu.userProvidedStartupState;\n              case 14:\n                action = this._initialAction;\n                startupState = this.state.nav;\n                if (!startupState && !userProvidedStartupState) {\n                  !!process.env.REACT_NAV_LOGGING && console.log('Init new Navigation State');\n                  startupState = Component.router.getStateForAction(action);\n                }\n                if (userProvidedStartupState) {\n                  startupState = userProvidedStartupState;\n                  _reactNavigationIsHydratingState = true;\n                }\n                if (parsedUrl) {\n                  _parsedUrl = parsedUrl, path = _parsedUrl.path, params = _parsedUrl.params;\n                  urlAction = Component.router.getActionForPathAndParams(path, params);\n                  if (urlAction) {\n                    !!process.env.REACT_NAV_LOGGING && console.log('Applying Navigation Action for Initial URL:', parsedUrl);\n                    action = urlAction;\n                    startupState = Component.router.getStateForAction(urlAction, startupState);\n                  }\n                }\n                dispatchActions = function dispatchActions() {\n                  return _this2._actionEventSubscribers.forEach(function (subscriber) {\n                    return subscriber({\n                      type: 'action',\n                      action: action,\n                      state: _this2.state.nav,\n                      lastState: null\n                    });\n                  });\n                };\n                if (!(startupState === this.state.nav)) {\n                  _context2.next = 23;\n                  break;\n                }\n                dispatchActions();\n                return _context2.abrupt(\"return\");\n              case 23:\n                this.setState({\n                  nav: startupState\n                }, function () {\n                  _reactNavigationIsHydratingState = false;\n                  dispatchActions();\n                });\n              case 24:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this, null, Promise);\n      }\n    }, {\n      key: \"getStartupParams\",\n      value: function getStartupParams() {\n        var _this$props2, uriPrefix, loadNavigationState, url, loadedNavState, _await$Promise$all, _await$Promise$all2;\n        return _regeneratorRuntime.async(function getStartupParams$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this$props2 = this.props, uriPrefix = _this$props2.uriPrefix, loadNavigationState = _this$props2.loadNavigationState;\n                _context3.prev = 1;\n                _context3.next = 4;\n                return _regeneratorRuntime.awrap(Promise.all([Linking.getInitialURL(), loadNavigationState && loadNavigationState()]));\n              case 4:\n                _await$Promise$all = _context3.sent;\n                _await$Promise$all2 = _slicedToArray(_await$Promise$all, 2);\n                url = _await$Promise$all2[0];\n                loadedNavState = _await$Promise$all2[1];\n                _context3.next = 12;\n                break;\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](1);\n              case 12:\n                return _context3.abrupt(\"return\", {\n                  parsedUrl: url && urlToPathAndParams(url, uriPrefix),\n                  userProvidedStartupState: loadedNavState\n                });\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, this, [[1, 10]], Promise);\n      }\n    }, {\n      key: \"componentDidCatch\",\n      value: function componentDidCatch(e) {\n        if (_reactNavigationIsHydratingState) {\n          _reactNavigationIsHydratingState = false;\n          console.warn('Uncaught exception while starting app from persisted navigation state! Trying to render again with a fresh navigation state...');\n          this.dispatch(NavigationActions.init());\n        } else {\n          throw e;\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this._isMounted = false;\n        Linking.removeEventListener('url', this._handleOpenURL);\n        this.subs && this.subs.remove();\n        if (this._isStateful()) {\n          _statefulContainerCount--;\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this3 = this;\n        var navigation = this.props.navigation;\n        if (this._isStateful()) {\n          var navState = this.state.nav;\n          if (!navState) {\n            return this._renderLoading();\n          }\n          if (!this._navigation || this._navigation.state !== navState) {\n            this._navigation = getNavigation(Component.router, navState, this.dispatch, this._actionEventSubscribers, this._getScreenProps, function () {\n              return _this3._navigation;\n            });\n          }\n          navigation = this._navigation;\n        }\n        invariant(navigation, 'failed to get navigation');\n        return React.createElement(ThemeProvider, {\n          value: this._getTheme()\n        }, React.createElement(NavigationProvider, {\n          value: navigation\n        }, React.createElement(Component, _extends({}, this.props, {\n          navigation: navigation\n        }))));\n      }\n    }]);\n    return NavigationContainer;\n  }(React.Component);\n  _defineProperty(NavigationContainer, \"router\", Component.router);\n  _defineProperty(NavigationContainer, \"navigationOptions\", null);\n  _defineProperty(NavigationContainer, \"defaultProps\", {\n    theme: 'light'\n  });\n  return NavigationContainer;\n}","map":{"version":3,"names":["React","Linking","Platform","BackHandler","NavigationActions","ThemeProvider","pathUtils","getNavigation","NavigationProvider","invariant","docsUrl","urlToPathAndParams","isStateful","props","navigation","validateProps","persistenceKey","console","warn","screenProps","persistNavigationState","loadNavigationState","theme","containerProps","_objectWithoutProperties","keys","Object","length","Error","concat","join","undefined","_statefulContainerCount","_TESTING_ONLY_reset_container_count","_reactNavigationIsHydratingState","createNavigationContainer","Component","NavigationContainer","_React$Component","_inherits","_super","_createSuper","_createClass","key","value","getDerivedStateFromProps","nextProps","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","Set","_ref","url","_this$props","enableURLHandling","uriPrefix","parsedUrl","path","params","action","router","getActionForPathAndParams","dispatch","_callee","nav","_regeneratorRuntime","async","_callee$","_context","prev","next","awrap","t0","stop","Promise","_navState","state","lastNavState","reducedState","getStateForAction","navState","dispatchActionEvents","_actionEventSubscribers","forEach","subscriber","type","lastState","setState","_onNavigationStateChange","_persistNavigationState","_initialAction","init","_isStateful","addEventListener","subs","_isMounted","remove","back","_renderLoading","renderLoadingExperimental","prevNav","onNavigationStateChange","process","env","REACT_NAV_LOGGING","group","log","groupEnd","newState","componentDidUpdate","componentDidMount","_this2","userProvidedStartupState","_await$this$getStartu","startupState","_parsedUrl","urlAction","dispatchActions","componentDidMount$","_context2","abrupt","NODE_ENV","detached","OS","_handleOpenURL","getStartupParams","sent","_this$props2","loadedNavState","_await$Promise$all","_await$Promise$all2","getStartupParams$","_context3","all","getInitialURL","_slicedToArray","componentDidCatch","e","componentWillUnmount","removeEventListener","render","_this3","_navigation","_getScreenProps","createElement","_getTheme","_extends"],"sources":["/Users/wesli/Documents/GitHub/stuport2/node_modules/@react-navigation/native/lib/module/createAppContainer.js"],"sourcesContent":["/* eslint-disable react/sort-comp */\n\nimport React from 'react';\nimport { Linking, Platform, BackHandler } from 'react-native';\nimport {\n  NavigationActions,\n  ThemeProvider,\n  pathUtils,\n  getNavigation,\n  NavigationProvider,\n} from '@react-navigation/core';\nimport invariant from './utils/invariant';\nimport docsUrl from './utils/docsUrl';\n\nconst { urlToPathAndParams } = pathUtils;\n\nfunction isStateful(props) {\n  return !props.navigation;\n}\n\nfunction validateProps(props) {\n  if (props.persistenceKey) {\n    console.warn(\n      'You passed persistenceKey prop to a navigator. ' +\n        'The persistenceKey prop was replaced by a more flexible persistence mechanism, ' +\n        'please see the navigation state persistence docs for more information. ' +\n        'Passing the persistenceKey prop is a no-op.'\n    );\n  }\n  if (isStateful(props)) {\n    return;\n  }\n  /* eslint-disable no-unused-vars */\n  const {\n    navigation,\n    screenProps,\n    persistNavigationState,\n    loadNavigationState,\n    theme,\n    ...containerProps\n  } = props;\n  /* eslint-enable no-unused-vars */\n\n  const keys = Object.keys(containerProps);\n\n  if (keys.length !== 0) {\n    throw new Error(\n      'This navigator has both navigation and container props, so it is ' +\n        `unclear if it should own its own state. Remove props: \"${keys.join(\n          ', '\n        )}\" ` +\n        'if the navigator should get its state from the navigation prop. If the ' +\n        'navigator should maintain its own state, do not pass a navigation prop.'\n    );\n  }\n  invariant(\n    (persistNavigationState === undefined &&\n      loadNavigationState === undefined) ||\n      (typeof persistNavigationState === 'function' &&\n        typeof loadNavigationState === 'function'),\n    'both persistNavigationState and loadNavigationState must either be undefined, or be functions'\n  );\n}\n\n// Track the number of stateful container instances. Warn if >0 and not using the\n// detached prop to explicitly acknowledge the behavior. We should deprecated implicit\n// stateful navigation containers in a future release and require a provider style pattern\n// instead in order to eliminate confusion entirely.\nlet _statefulContainerCount = 0;\nexport function _TESTING_ONLY_reset_container_count() {\n  _statefulContainerCount = 0;\n}\n\n// We keep a global flag to catch errors during the state persistence hydrating scenario.\n// The innermost navigator who catches the error will dispatch a new init action.\nlet _reactNavigationIsHydratingState = false;\n// Unfortunate to use global state here, but it seems necessesary for the time\n// being. There seems to be some problems with cascading componentDidCatch\n// handlers. Ideally the inner non-stateful navigator catches the error and\n// re-throws it, to be caught by the top-level stateful navigator.\n\n/**\n * Create an HOC that injects the navigation and manages the navigation state\n * in case it's not passed from above.\n * This allows to use e.g. the StackNavigator and TabNavigator as root-level\n * components.\n */\nexport default function createNavigationContainer(Component) {\n  class NavigationContainer extends React.Component {\n    subs = null;\n\n    static router = Component.router;\n    static navigationOptions = null;\n\n    static defaultProps = {\n      theme: 'light',\n    };\n\n    static getDerivedStateFromProps(nextProps) {\n      validateProps(nextProps);\n      return null;\n    }\n\n    _actionEventSubscribers = new Set();\n\n    constructor(props) {\n      super(props);\n\n      validateProps(props);\n\n      this._initialAction = NavigationActions.init();\n\n      if (\n        this._isStateful() &&\n        BackHandler &&\n        typeof BackHandler.addEventListener === 'function'\n      ) {\n        this.subs = BackHandler.addEventListener('hardwareBackPress', () => {\n          if (!this._isMounted) {\n            this.subs && this.subs.remove();\n          } else {\n            // dispatch returns true if the action results in a state change,\n            // and false otherwise. This maps well to what BackHandler expects\n            // from a callback -- true if handled, false if not handled\n            return this.dispatch(NavigationActions.back());\n          }\n        });\n      }\n\n      this.state = {\n        nav:\n          this._isStateful() && !props.loadNavigationState\n            ? Component.router.getStateForAction(this._initialAction)\n            : null,\n      };\n    }\n\n    _renderLoading() {\n      return this.props.renderLoadingExperimental\n        ? this.props.renderLoadingExperimental()\n        : null;\n    }\n\n    _isStateful() {\n      return isStateful(this.props);\n    }\n\n    _handleOpenURL = ({ url }) => {\n      const { enableURLHandling, uriPrefix } = this.props;\n      if (enableURLHandling === false) {\n        return;\n      }\n      const parsedUrl = urlToPathAndParams(url, uriPrefix);\n      if (parsedUrl) {\n        const { path, params } = parsedUrl;\n        const action = Component.router.getActionForPathAndParams(path, params);\n        if (action) {\n          this.dispatch(action);\n        }\n      }\n    };\n\n    _onNavigationStateChange(prevNav, nav, action) {\n      if (\n        typeof this.props.onNavigationStateChange === 'undefined' &&\n        this._isStateful() &&\n        !!process.env.REACT_NAV_LOGGING\n      ) {\n        if (console.group) {\n          console.group('Navigation Dispatch: ');\n          console.log('Action: ', action);\n          console.log('New State: ', nav);\n          console.log('Last State: ', prevNav);\n          console.groupEnd();\n        } else {\n          console.log('Navigation Dispatch: ', {\n            action,\n            newState: nav,\n            lastState: prevNav,\n          });\n        }\n        return;\n      }\n\n      if (typeof this.props.onNavigationStateChange === 'function') {\n        this.props.onNavigationStateChange(prevNav, nav, action);\n      }\n    }\n\n    componentDidUpdate() {\n      // Clear cached _navState every tick\n      if (this._navState === this.state.nav) {\n        this._navState = null;\n      }\n    }\n\n    async componentDidMount() {\n      this._isMounted = true;\n      if (!this._isStateful()) {\n        return;\n      }\n\n      if (process.env.NODE_ENV !== 'production' && !this.props.detached) {\n        if (_statefulContainerCount > 0) {\n          // Temporarily only show this on iOS due to this issue:\n          // https://github.com/react-navigation/react-navigation/issues/4196#issuecomment-390827829\n          if (Platform.OS === 'ios') {\n            console.warn(\n              `You should only render one navigator explicitly in your app, and other navigators should be rendered by including them in that navigator. Full details at: ${docsUrl(\n                'common-mistakes.html#explicitly-rendering-more-than-one-navigator'\n              )}`\n            );\n          }\n        }\n      }\n      _statefulContainerCount++;\n      Linking.addEventListener('url', this._handleOpenURL);\n\n      // Pull out anything that can impact state\n      let parsedUrl = null;\n      let userProvidedStartupState = null;\n      if (this.props.enableURLHandling !== false) {\n        ({\n          parsedUrl,\n          userProvidedStartupState,\n        } = await this.getStartupParams());\n      }\n\n      // Initialize state. This must be done *after* any async code\n      // so we don't end up with a different value for this.state.nav\n      // due to changes while async function was resolving\n      let action = this._initialAction;\n      // eslint-disable-next-line react/no-access-state-in-setstate\n      let startupState = this.state.nav;\n      if (!startupState && !userProvidedStartupState) {\n        !!process.env.REACT_NAV_LOGGING &&\n          console.log('Init new Navigation State');\n        startupState = Component.router.getStateForAction(action);\n      }\n\n      // Pull user-provided persisted state\n      if (userProvidedStartupState) {\n        startupState = userProvidedStartupState;\n        _reactNavigationIsHydratingState = true;\n      }\n\n      // Pull state out of URL\n      if (parsedUrl) {\n        const { path, params } = parsedUrl;\n        const urlAction = Component.router.getActionForPathAndParams(\n          path,\n          params\n        );\n        if (urlAction) {\n          !!process.env.REACT_NAV_LOGGING &&\n            console.log(\n              'Applying Navigation Action for Initial URL:',\n              parsedUrl\n            );\n          action = urlAction;\n          startupState = Component.router.getStateForAction(\n            urlAction,\n            startupState\n          );\n        }\n      }\n\n      const dispatchActions = () =>\n        this._actionEventSubscribers.forEach((subscriber) =>\n          subscriber({\n            type: 'action',\n            action,\n            state: this.state.nav,\n            lastState: null,\n          })\n        );\n\n      if (startupState === this.state.nav) {\n        dispatchActions();\n        return;\n      }\n\n      // eslint-disable-next-line react/no-did-mount-set-state\n      this.setState({ nav: startupState }, () => {\n        _reactNavigationIsHydratingState = false;\n        dispatchActions();\n      });\n    }\n\n    async getStartupParams() {\n      const { uriPrefix, loadNavigationState } = this.props;\n      let url, loadedNavState;\n      try {\n        [url, loadedNavState] = await Promise.all([\n          Linking.getInitialURL(),\n          loadNavigationState && loadNavigationState(),\n        ]);\n      } catch (err) {\n        // ignore\n      }\n      return {\n        parsedUrl: url && urlToPathAndParams(url, uriPrefix),\n        userProvidedStartupState: loadedNavState,\n      };\n    }\n\n    componentDidCatch(e) {\n      if (_reactNavigationIsHydratingState) {\n        _reactNavigationIsHydratingState = false;\n        console.warn(\n          'Uncaught exception while starting app from persisted navigation state! Trying to render again with a fresh navigation state...'\n        );\n        this.dispatch(NavigationActions.init());\n      } else {\n        throw e;\n      }\n    }\n\n    _persistNavigationState = async (nav) => {\n      const { persistNavigationState } = this.props;\n      if (persistNavigationState) {\n        try {\n          await persistNavigationState(nav);\n        } catch (err) {\n          console.warn(\n            'Uncaught exception while calling persistNavigationState()! You should handle exceptions thrown from persistNavigationState(), ignoring them may result in undefined behavior.'\n          );\n        }\n      }\n    };\n\n    componentWillUnmount() {\n      this._isMounted = false;\n      Linking.removeEventListener('url', this._handleOpenURL);\n      this.subs && this.subs.remove();\n\n      if (this._isStateful()) {\n        _statefulContainerCount--;\n      }\n    }\n\n    // Per-tick temporary storage for state.nav\n\n    dispatch = (action) => {\n      if (this.props.navigation) {\n        return this.props.navigation.dispatch(action);\n      }\n\n      // navState will have the most up-to-date value, because setState sometimes behaves asyncronously\n      this._navState = this._navState || this.state.nav;\n      const lastNavState = this._navState;\n      invariant(lastNavState, 'should be set in constructor if stateful');\n      const reducedState = Component.router.getStateForAction(\n        action,\n        lastNavState\n      );\n      const navState = reducedState === null ? lastNavState : reducedState;\n\n      const dispatchActionEvents = () => {\n        this._actionEventSubscribers.forEach((subscriber) =>\n          subscriber({\n            type: 'action',\n            action,\n            state: navState,\n            lastState: lastNavState,\n          })\n        );\n      };\n\n      if (reducedState === null) {\n        // The router will return null when action has been handled and the state hasn't changed.\n        // dispatch returns true when something has been handled.\n        dispatchActionEvents();\n        return true;\n      }\n\n      if (navState !== lastNavState) {\n        // Cache updates to state.nav during the tick to ensure that subsequent calls will not discard this change\n        this._navState = navState;\n        this.setState({ nav: navState }, () => {\n          this._onNavigationStateChange(lastNavState, navState, action);\n          dispatchActionEvents();\n          this._persistNavigationState(navState);\n        });\n        return true;\n      }\n\n      dispatchActionEvents();\n      return false;\n    };\n\n    _getScreenProps = () => this.props.screenProps;\n\n    _getTheme = () => {\n      if (this.props.theme === 'light' || this.props.theme === 'dark') {\n        return this.props.theme;\n      } else if (this.props.theme === 'no-preference') {\n        return 'light';\n      } else {\n        console.warn(\n          `Invalid theme provided: ${this.props.theme}. Only 'light' and 'dark' are supported. Falling back to 'light'`\n        );\n        return 'light';\n      }\n    };\n\n    render() {\n      let navigation = this.props.navigation;\n      if (this._isStateful()) {\n        const navState = this.state.nav;\n        if (!navState) {\n          return this._renderLoading();\n        }\n        if (!this._navigation || this._navigation.state !== navState) {\n          this._navigation = getNavigation(\n            Component.router,\n            navState,\n            this.dispatch,\n            this._actionEventSubscribers,\n            this._getScreenProps,\n            () => this._navigation\n          );\n        }\n        navigation = this._navigation;\n      }\n      invariant(navigation, 'failed to get navigation');\n\n      return (\n        <ThemeProvider value={this._getTheme()}>\n          <NavigationProvider value={navigation}>\n            <Component {...this.props} navigation={navigation} />\n          </NavigationProvider>\n        </ThemeProvider>\n      );\n    }\n  }\n\n  return NavigationContainer;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}