{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/brentvatne/code/react-native-appearance/src/NativeAppearance.web.tsx\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport SyntheticPlatformEmitter from \"./web/SyntheticPlatformEmitter\";\nfunction getQuery() {\n  if (typeof window === 'undefined' || !window.matchMedia) return null;\n  return window.matchMedia('(prefers-color-scheme: dark)');\n}\nfunction isMediaQueryList(query) {\n  return query && query.addListener && query.removeListener && typeof query.matches === 'boolean';\n}\nexport var NativeAppearance = {\n  get name() {\n    return 'NativeAppearance';\n  },\n  get initialPreferences() {\n    var query = getQuery();\n    if (isMediaQueryList(query)) {\n      return {\n        colorScheme: query.matches ? 'dark' : 'light'\n      };\n    }\n    return {\n      colorScheme: 'no-preference'\n    };\n  }\n};\nexport function NativeAppearanceProvider(props) {\n  React.useEffect(function () {\n    var query = getQuery();\n    function listener(_ref) {\n      var matches = _ref.matches;\n      var colorScheme = matches ? 'dark' : 'light';\n      SyntheticPlatformEmitter.emit('appearanceChanged', {\n        colorScheme: colorScheme\n      });\n    }\n    if (query) query.addListener(listener);\n    return function () {\n      if (query) {\n        query.removeListener(listener);\n      }\n    };\n  }, []);\n  return React.createElement(View, _extends({\n    style: {\n      flex: 1\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    }\n  }));\n}\n;","map":{"version":3,"names":["React","View","SyntheticPlatformEmitter","getQuery","window","matchMedia","isMediaQueryList","query","addListener","removeListener","matches","NativeAppearance","name","initialPreferences","colorScheme","NativeAppearanceProvider","props","useEffect","listener","_ref","emit","createElement","_extends","style","flex","__source","fileName","_jsxFileName","lineNumber"],"sources":["/Users/wesli/Documents/GitHub/stuport2/node_modules/react-native-appearance/lib/module/NativeAppearance.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\n\nimport { AppearancePreferences } from './Appearance.types';\n// @ts-ignore\nimport SyntheticPlatformEmitter from './web/SyntheticPlatformEmitter';\n\nfunction getQuery(): MediaQueryList | null {\n  if (typeof window === 'undefined' || !window.matchMedia) return null;\n  return window.matchMedia('(prefers-color-scheme: dark)');\n}\n\nfunction isMediaQueryList(query: any): query is MediaQueryList {\n  return query && query.addListener && query.removeListener && typeof query.matches === 'boolean';\n}\n\nexport const NativeAppearance = {\n  get name(): string {\n    return 'NativeAppearance';\n  },\n  get initialPreferences(): AppearancePreferences {\n    const query = getQuery();\n    if (isMediaQueryList(query)) {\n      return { colorScheme: query.matches ? 'dark' : 'light' }\n    }\n    return { colorScheme: 'no-preference' };\n  },\n};\n\nexport function NativeAppearanceProvider(props: any) {\n  React.useEffect(() => {\n    const query = getQuery();\n\n    function listener({ matches }: MediaQueryListEvent) {\n      const colorScheme = matches ? 'dark' : 'light';\n      SyntheticPlatformEmitter.emit('appearanceChanged', {\n        colorScheme,\n      });\n    }\n\n    if (query)\n      query.addListener(listener);\n\n    return () => {\n      if (query) {\n        query.removeListener(listener)\n      }\n    }\n  }, []);\n\n  return <View style={{ flex: 1 }} {...props} />\n};\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAAC,IAAA;AAIA,OAAOC,wBAAP;AAEA,SAASC,QAATA,CAAA,EAA2C;EACzC,IAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,CAACA,MAAM,CAACC,UAA7C,EAAyD,OAAO,IAAP;EACzD,OAAOD,MAAM,CAACC,UAAP,CAAkB,8BAAlB,CAAP;AACD;AAED,SAASC,gBAATA,CAA0BC,KAA1B,EAA+D;EAC7D,OAAOA,KAAK,IAAIA,KAAK,CAACC,WAAf,IAA8BD,KAAK,CAACE,cAApC,IAAsD,OAAOF,KAAK,CAACG,OAAb,KAAyB,SAAtF;AACD;AAED,OAAO,IAAMC,gBAAgB,GAAG;EAC9B,IAAIC,IAAJA,CAAA,EAAmB;IACjB,OAAO,kBAAP;EACD,CAH6B;EAI9B,IAAIC,kBAAJA,CAAA,EAAgD;IAC9C,IAAMN,KAAK,GAAGJ,QAAQ,EAAtB;IACA,IAAIG,gBAAgB,CAACC,KAAD,CAApB,EAA6B;MAC3B,OAAO;QAAEO,WAAW,EAAEP,KAAK,CAACG,OAAN,GAAgB,MAAhB,GAAyB;MAAxC,CAAP;IACD;IACD,OAAO;MAAEI,WAAW,EAAE;IAAf,CAAP;EACD;AAV6B,CAAzB;AAaP,OAAO,SAASC,wBAATA,CAAkCC,KAAlC,EAA8C;EACnDhB,KAAK,CAACiB,SAAN,CAAgB,YAAM;IACpB,IAAMV,KAAK,GAAGJ,QAAQ,EAAtB;IAEA,SAASe,QAATA,CAAAC,IAAA,EAAoD;MAAA,IAAhCT,OAAgC,GAAAS,IAAA,CAAhCT,OAAgC;MAClD,IAAMI,WAAW,GAAGJ,OAAO,GAAG,MAAH,GAAY,OAAvC;MACAR,wBAAwB,CAACkB,IAAzB,CAA8B,mBAA9B,EAAmD;QACjDN,WAAW,EAAXA;MADiD,CAAnD;IAGD;IAED,IAAIP,KAAJ,EACEA,KAAK,CAACC,WAAN,CAAkBU,QAAlB;IAEF,OAAO,YAAM;MACX,IAAIX,KAAJ,EAAW;QACTA,KAAK,CAACE,cAAN,CAAqBS,QAArB;MACD;IACF,CAJD;EAKD,CAlBD,EAkBG,EAlBH;EAoBA,OAAOlB,KAAA,CAAAqB,aAAA,CAACpB,IAAD,EAAAqB,QAAA;IAAMC,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAR;EAAb,GAA8BR,KAA9B;IAAAS,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;IAAA;EAAA,GAAP;AACD;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}