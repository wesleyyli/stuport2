{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport React from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nexport default (function (Navigator, navigatorConfig) {\n  var _class, _temp;\n  return _temp = _class = function (_React$Component) {\n    _inherits(KeyboardAwareNavigator, _React$Component);\n    var _super = _createSuper(KeyboardAwareNavigator);\n    function KeyboardAwareNavigator() {\n      var _this;\n      _classCallCheck(this, KeyboardAwareNavigator);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      _defineProperty(_assertThisInitialized(_this), \"_previouslyFocusedTextInput\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_handleGestureBegin\", function () {\n        _this._previouslyFocusedTextInput = TextInput.State.currentlyFocusedField();\n        if (_this._previouslyFocusedTextInput) {\n          TextInput.State.blurTextInput(_this._previouslyFocusedTextInput);\n        }\n        _this.props.onGestureBegin && _this.props.onGestureBegin();\n      });\n      _defineProperty(_assertThisInitialized(_this), \"_handleGestureCanceled\", function () {\n        if (_this._previouslyFocusedTextInput) {\n          TextInput.State.focusTextInput(_this._previouslyFocusedTextInput);\n        }\n        _this.props.onGestureCanceled && _this.props.onGestureCanceled();\n      });\n      _defineProperty(_assertThisInitialized(_this), \"_handleGestureEnd\", function () {\n        _this._previouslyFocusedTextInput = null;\n        _this.props.onGestureFinish && _this.props.onGestureFinish();\n      });\n      _defineProperty(_assertThisInitialized(_this), \"_handleTransitionStart\", function (transitionProps, prevTransitionProps) {\n        if (transitionProps.index !== prevTransitionProps.index) {\n          var currentField = TextInput.State.currentlyFocusedField();\n          if (currentField) {\n            TextInput.State.blurTextInput(currentField);\n          }\n        }\n        var onTransitionStart = _this.props.onTransitionStart || navigatorConfig.onTransitionStart;\n        onTransitionStart && onTransitionStart(transitionProps, prevTransitionProps);\n      });\n      return _this;\n    }\n    _createClass(KeyboardAwareNavigator, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(Navigator, _extends({}, this.props, {\n          onGestureBegin: this._handleGestureBegin,\n          onGestureCanceled: this._handleGestureCanceled,\n          onGestureEnd: this._handleGestureEnd,\n          onTransitionStart: this._handleTransitionStart\n        }));\n      }\n    }]);\n    return KeyboardAwareNavigator;\n  }(React.Component), _defineProperty(_class, \"router\", Navigator.router), _defineProperty(_class, \"navigationOptions\", Navigator.navigationOptions), _temp;\n});","map":{"version":3,"names":["React","TextInput","Navigator","navigatorConfig","_class","_temp","_React$Component","_inherits","KeyboardAwareNavigator","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","_previouslyFocusedTextInput","State","currentlyFocusedField","blurTextInput","props","onGestureBegin","focusTextInput","onGestureCanceled","onGestureFinish","transitionProps","prevTransitionProps","index","currentField","onTransitionStart","_createClass","key","value","render","createElement","_extends","_handleGestureBegin","_handleGestureCanceled","onGestureEnd","_handleGestureEnd","_handleTransitionStart","Component","router","navigationOptions"],"sources":["/Users/wesli/Documents/GitHub/stuport2/node_modules/@react-navigation/native/lib/module/createKeyboardAwareNavigator.js"],"sourcesContent":["import React from 'react';\nimport { TextInput } from 'react-native';\n\nexport default (Navigator, navigatorConfig) =>\n  class KeyboardAwareNavigator extends React.Component {\n    static router = Navigator.router;\n    static navigationOptions = Navigator.navigationOptions;\n    _previouslyFocusedTextInput = null;\n\n    _handleGestureBegin = () => {\n      this._previouslyFocusedTextInput = TextInput.State.currentlyFocusedField();\n      if (this._previouslyFocusedTextInput) {\n        TextInput.State.blurTextInput(this._previouslyFocusedTextInput);\n      }\n      this.props.onGestureBegin && this.props.onGestureBegin();\n    };\n\n    _handleGestureCanceled = () => {\n      if (this._previouslyFocusedTextInput) {\n        TextInput.State.focusTextInput(this._previouslyFocusedTextInput);\n      }\n      this.props.onGestureCanceled && this.props.onGestureCanceled();\n    };\n\n    _handleGestureEnd = () => {\n      this._previouslyFocusedTextInput = null;\n      this.props.onGestureFinish && this.props.onGestureFinish();\n    };\n\n    _handleTransitionStart = (transitionProps, prevTransitionProps) => {\n      // TODO: We should not even have received the transition start event\n      // in the case where the index did not change, I believe. We\n      // should revisit this after 2.0 release.\n      if (transitionProps.index !== prevTransitionProps.index) {\n        const currentField = TextInput.State.currentlyFocusedField();\n        if (currentField) {\n          TextInput.State.blurTextInput(currentField);\n        }\n      }\n\n      const onTransitionStart =\n        this.props.onTransitionStart || navigatorConfig.onTransitionStart;\n      onTransitionStart &&\n        onTransitionStart(transitionProps, prevTransitionProps);\n    };\n\n    render() {\n      return (\n        <Navigator\n          {...this.props}\n          onGestureBegin={this._handleGestureBegin}\n          onGestureCanceled={this._handleGestureCanceled}\n          onGestureEnd={this._handleGestureEnd}\n          onTransitionStart={this._handleTransitionStart}\n        />\n      );\n    }\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}