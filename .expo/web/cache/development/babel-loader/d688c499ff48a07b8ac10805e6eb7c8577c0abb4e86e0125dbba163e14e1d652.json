{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\nimport applyLayout from \"../../modules/applyLayout\";\nimport applyNativeMethods from \"../../modules/applyNativeMethods\";\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport { Component } from 'react';\nimport ColorPropType from \"../ColorPropType\";\nimport createElement from \"../createElement\";\nimport css from \"../StyleSheet/css\";\nimport findNodeHandle from \"../findNodeHandle\";\nimport StyleSheetPropType from \"../../modules/StyleSheetPropType\";\nimport TextInputStylePropTypes from \"./TextInputStylePropTypes\";\nimport TextInputState from \"../../modules/TextInputState\";\nimport ViewPropTypes from \"../ViewPropTypes\";\nimport { any, bool, func, number, oneOf, shape, string } from 'prop-types';\nvar isAndroid = canUseDOM && /Android/i.test(navigator && navigator.userAgent);\nvar emptyObject = {};\nvar normalizeEventHandler = function normalizeEventHandler(handler) {\n  return function (e) {\n    if (handler) {\n      e.nativeEvent.text = e.target.value;\n      return handler(e);\n    }\n  };\n};\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  if (node && selection) {\n    var selectionEnd = node.selectionEnd,\n      selectionStart = node.selectionStart;\n    var start = selection.start,\n      end = selection.end;\n    return start !== selectionStart || end !== selectionEnd;\n  }\n  return false;\n};\nvar setSelection = function setSelection(node, selection) {\n  try {\n    if (isSelectionStale(node, selection)) {\n      var start = selection.start,\n        end = selection.end;\n      if (isAndroid) {\n        setTimeout(function () {\n          return node.setSelectionRange(start, end || start);\n        }, 10);\n      } else {\n        node.setSelectionRange(start, end || start);\n      }\n    }\n  } catch (e) {}\n};\nvar TextInput = function (_Component) {\n  _inheritsLoose(TextInput, _Component);\n  function TextInput() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this._handleBlur = function (e) {\n      var onBlur = _this.props.onBlur;\n      TextInputState._currentlyFocusedNode = null;\n      if (onBlur) {\n        onBlur(e);\n      }\n    };\n    _this._handleContentSizeChange = function () {\n      var _this$props = _this.props,\n        onContentSizeChange = _this$props.onContentSizeChange,\n        multiline = _this$props.multiline;\n      if (multiline && onContentSizeChange) {\n        var newHeight = _this._node.scrollHeight;\n        var newWidth = _this._node.scrollWidth;\n        if (newHeight !== _this._nodeHeight || newWidth !== _this._nodeWidth) {\n          _this._nodeHeight = newHeight;\n          _this._nodeWidth = newWidth;\n          onContentSizeChange({\n            nativeEvent: {\n              contentSize: {\n                height: _this._nodeHeight,\n                width: _this._nodeWidth\n              }\n            }\n          });\n        }\n      }\n    };\n    _this._handleChange = function (e) {\n      var _this$props2 = _this.props,\n        onChange = _this$props2.onChange,\n        onChangeText = _this$props2.onChangeText;\n      var text = e.nativeEvent.text;\n      _this._handleContentSizeChange();\n      if (onChange) {\n        onChange(e);\n      }\n      if (onChangeText) {\n        onChangeText(text);\n      }\n      _this._handleSelectionChange(e);\n    };\n    _this._handleFocus = function (e) {\n      var _this$props3 = _this.props,\n        clearTextOnFocus = _this$props3.clearTextOnFocus,\n        onFocus = _this$props3.onFocus,\n        selectTextOnFocus = _this$props3.selectTextOnFocus;\n      var node = _this._node;\n      TextInputState._currentlyFocusedNode = _this._node;\n      if (onFocus) {\n        onFocus(e);\n      }\n      if (clearTextOnFocus) {\n        _this.clear();\n      }\n      if (selectTextOnFocus) {\n        node && node.select();\n      }\n    };\n    _this._handleKeyDown = function (e) {\n      e.stopPropagation();\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowUp' || e.key === 'ArrowRight' || e.key === 'ArrowDown' || e.key === 'Backspace' || e.key === 'Escape' || e.key === 'Enter' && e.metaKey || e.key === 'Tab') {\n        _this._handleKeyPress(e);\n      }\n    };\n    _this._handleKeyPress = function (e) {\n      var _this$props4 = _this.props,\n        blurOnSubmit = _this$props4.blurOnSubmit,\n        multiline = _this$props4.multiline,\n        onKeyPress = _this$props4.onKeyPress,\n        onSubmitEditing = _this$props4.onSubmitEditing;\n      var blurOnSubmitDefault = !multiline;\n      var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n      if (onKeyPress) {\n        var keyValue = e.key;\n        if (keyValue) {\n          e.nativeEvent = {\n            altKey: e.altKey,\n            ctrlKey: e.ctrlKey,\n            key: keyValue,\n            metaKey: e.metaKey,\n            shiftKey: e.shiftKey,\n            target: e.target\n          };\n          onKeyPress(e);\n        }\n      }\n      if (!e.isDefaultPrevented() && e.key === 'Enter' && !e.shiftKey) {\n        if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n          e.preventDefault();\n          e.nativeEvent = {\n            target: e.target,\n            text: e.target.value\n          };\n          onSubmitEditing(e);\n        }\n        if (shouldBlurOnSubmit) {\n          _this.blur();\n        }\n      }\n    };\n    _this._handleSelectionChange = function (e) {\n      var _this$props5 = _this.props,\n        onSelectionChange = _this$props5.onSelectionChange,\n        _this$props5$selectio = _this$props5.selection,\n        selection = _this$props5$selectio === void 0 ? emptyObject : _this$props5$selectio;\n      if (onSelectionChange) {\n        try {\n          var node = e.target;\n          if (isSelectionStale(node, selection)) {\n            var selectionStart = node.selectionStart,\n              selectionEnd = node.selectionEnd;\n            e.nativeEvent.selection = {\n              start: selectionStart,\n              end: selectionEnd\n            };\n            onSelectionChange(e);\n          }\n        } catch (e) {}\n      }\n    };\n    _this._setNode = function (component) {\n      _this._node = findNodeHandle(component);\n      if (_this._node) {\n        _this._handleContentSizeChange();\n      }\n    };\n    return _this;\n  }\n  var _proto = TextInput.prototype;\n  _proto.clear = function clear() {\n    this._node.value = '';\n  };\n  _proto.isFocused = function isFocused() {\n    return TextInputState.currentlyFocusedField() === this._node;\n  };\n  _proto.componentDidMount = function componentDidMount() {\n    setSelection(this._node, this.props.selection);\n    if (document.activeElement === this._node) {\n      TextInputState._currentlyFocusedNode = this._node;\n    }\n  };\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    setSelection(this._node, this.props.selection);\n  };\n  _proto.render = function render() {\n    var _this$props6 = this.props,\n      autoComplete = _this$props6.autoComplete,\n      autoCorrect = _this$props6.autoCorrect,\n      editable = _this$props6.editable,\n      keyboardType = _this$props6.keyboardType,\n      multiline = _this$props6.multiline,\n      numberOfLines = _this$props6.numberOfLines,\n      returnKeyType = _this$props6.returnKeyType,\n      secureTextEntry = _this$props6.secureTextEntry,\n      blurOnSubmit = _this$props6.blurOnSubmit,\n      clearTextOnFocus = _this$props6.clearTextOnFocus,\n      onChangeText = _this$props6.onChangeText,\n      onLayout = _this$props6.onLayout,\n      onSelectionChange = _this$props6.onSelectionChange,\n      onSubmitEditing = _this$props6.onSubmitEditing,\n      selection = _this$props6.selection,\n      selectTextOnFocus = _this$props6.selectTextOnFocus,\n      spellCheck = _this$props6.spellCheck,\n      accessibilityViewIsModal = _this$props6.accessibilityViewIsModal,\n      allowFontScaling = _this$props6.allowFontScaling,\n      caretHidden = _this$props6.caretHidden,\n      clearButtonMode = _this$props6.clearButtonMode,\n      dataDetectorTypes = _this$props6.dataDetectorTypes,\n      disableFullscreenUI = _this$props6.disableFullscreenUI,\n      enablesReturnKeyAutomatically = _this$props6.enablesReturnKeyAutomatically,\n      hitSlop = _this$props6.hitSlop,\n      inlineImageLeft = _this$props6.inlineImageLeft,\n      inlineImagePadding = _this$props6.inlineImagePadding,\n      inputAccessoryViewID = _this$props6.inputAccessoryViewID,\n      keyboardAppearance = _this$props6.keyboardAppearance,\n      maxFontSizeMultiplier = _this$props6.maxFontSizeMultiplier,\n      needsOffscreenAlphaCompositing = _this$props6.needsOffscreenAlphaCompositing,\n      onAccessibilityTap = _this$props6.onAccessibilityTap,\n      onContentSizeChange = _this$props6.onContentSizeChange,\n      onEndEditing = _this$props6.onEndEditing,\n      onMagicTap = _this$props6.onMagicTap,\n      onScroll = _this$props6.onScroll,\n      removeClippedSubviews = _this$props6.removeClippedSubviews,\n      renderToHardwareTextureAndroid = _this$props6.renderToHardwareTextureAndroid,\n      returnKeyLabel = _this$props6.returnKeyLabel,\n      scrollEnabled = _this$props6.scrollEnabled,\n      selectionColor = _this$props6.selectionColor,\n      selectionState = _this$props6.selectionState,\n      shouldRasterizeIOS = _this$props6.shouldRasterizeIOS,\n      textBreakStrategy = _this$props6.textBreakStrategy,\n      textContentType = _this$props6.textContentType,\n      underlineColorAndroid = _this$props6.underlineColorAndroid,\n      otherProps = _objectWithoutPropertiesLoose(_this$props6, [\"autoComplete\", \"autoCorrect\", \"editable\", \"keyboardType\", \"multiline\", \"numberOfLines\", \"returnKeyType\", \"secureTextEntry\", \"blurOnSubmit\", \"clearTextOnFocus\", \"onChangeText\", \"onLayout\", \"onSelectionChange\", \"onSubmitEditing\", \"selection\", \"selectTextOnFocus\", \"spellCheck\", \"accessibilityViewIsModal\", \"allowFontScaling\", \"caretHidden\", \"clearButtonMode\", \"dataDetectorTypes\", \"disableFullscreenUI\", \"enablesReturnKeyAutomatically\", \"hitSlop\", \"inlineImageLeft\", \"inlineImagePadding\", \"inputAccessoryViewID\", \"keyboardAppearance\", \"maxFontSizeMultiplier\", \"needsOffscreenAlphaCompositing\", \"onAccessibilityTap\", \"onContentSizeChange\", \"onEndEditing\", \"onMagicTap\", \"onScroll\", \"removeClippedSubviews\", \"renderToHardwareTextureAndroid\", \"returnKeyLabel\", \"scrollEnabled\", \"selectionColor\", \"selectionState\", \"shouldRasterizeIOS\", \"textBreakStrategy\", \"textContentType\", \"underlineColorAndroid\"]);\n    var type;\n    switch (keyboardType) {\n      case 'email-address':\n        type = 'email';\n        break;\n      case 'number-pad':\n      case 'numeric':\n        type = 'number';\n        break;\n      case 'phone-pad':\n        type = 'tel';\n        break;\n      case 'search':\n      case 'web-search':\n        type = 'search';\n        break;\n      case 'url':\n        type = 'url';\n        break;\n      default:\n        type = 'text';\n    }\n    if (secureTextEntry) {\n      type = 'password';\n    }\n    var component = multiline ? 'textarea' : 'input';\n    _extends(otherProps, {\n      autoComplete: autoComplete === 'off' ? 'noop' : autoComplete,\n      autoCorrect: autoCorrect ? 'on' : 'off',\n      classList: [classes.textinput],\n      dir: 'auto',\n      enterkeyhint: returnKeyType,\n      onBlur: normalizeEventHandler(this._handleBlur),\n      onChange: normalizeEventHandler(this._handleChange),\n      onFocus: normalizeEventHandler(this._handleFocus),\n      onKeyDown: this._handleKeyDown,\n      onKeyPress: this._handleKeyPress,\n      onSelect: normalizeEventHandler(this._handleSelectionChange),\n      readOnly: !editable,\n      ref: this._setNode,\n      spellCheck: spellCheck != null ? spellCheck : autoCorrect\n    });\n    if (multiline) {\n      otherProps.rows = numberOfLines;\n    } else {\n      otherProps.type = type;\n    }\n    return createElement(component, otherProps);\n  };\n  return TextInput;\n}(Component);\nTextInput.displayName = 'TextInput';\nTextInput.defaultProps = {\n  autoCapitalize: 'sentences',\n  autoComplete: 'on',\n  autoCorrect: true,\n  editable: true,\n  keyboardType: 'default',\n  multiline: false,\n  numberOfLines: 1,\n  secureTextEntry: false\n};\nTextInput.State = TextInputState;\nTextInput.propTypes = process.env.NODE_ENV !== \"production\" ? _objectSpread({}, ViewPropTypes, {\n  autoCapitalize: oneOf(['characters', 'none', 'sentences', 'words']),\n  autoComplete: string,\n  autoCorrect: bool,\n  autoFocus: bool,\n  blurOnSubmit: bool,\n  clearTextOnFocus: bool,\n  defaultValue: string,\n  editable: bool,\n  inputAccessoryViewID: string,\n  keyboardType: oneOf(['default', 'email-address', 'number-pad', 'numbers-and-punctuation', 'numeric', 'phone-pad', 'search', 'url', 'web-search']),\n  maxFontSizeMultiplier: number,\n  maxLength: number,\n  multiline: bool,\n  numberOfLines: number,\n  onBlur: func,\n  onChange: func,\n  onChangeText: func,\n  onFocus: func,\n  onKeyPress: func,\n  onSelectionChange: func,\n  onSubmitEditing: func,\n  placeholder: string,\n  placeholderTextColor: ColorPropType,\n  returnKeyType: oneOf(['enter', 'done', 'go', 'next', 'previous', 'search', 'send']),\n  secureTextEntry: bool,\n  selectTextOnFocus: bool,\n  selection: shape({\n    start: number.isRequired,\n    end: number\n  }),\n  spellCheck: bool,\n  style: StyleSheetPropType(TextInputStylePropTypes),\n  value: string,\n  caretHidden: bool,\n  clearButtonMode: string,\n  dataDetectorTypes: string,\n  disableFullscreenUI: bool,\n  enablesReturnKeyAutomatically: bool,\n  keyboardAppearance: string,\n  inlineImageLeft: string,\n  inlineImagePadding: number,\n  onContentSizeChange: func,\n  onEndEditing: func,\n  onScroll: func,\n  returnKeyLabel: string,\n  selectionColor: ColorPropType,\n  selectionState: any,\n  textBreakStrategy: string,\n  underlineColorAndroid: ColorPropType\n}) : {};\nvar classes = css.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    padding: 0,\n    resize: 'none'\n  }\n});\nexport default applyLayout(applyNativeMethods(TextInput));","map":{"version":3,"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_inheritsLoose","subClass","superClass","prototype","create","constructor","__proto__","applyLayout","applyNativeMethods","canUseDOM","Component","ColorPropType","createElement","css","findNodeHandle","StyleSheetPropType","TextInputStylePropTypes","TextInputState","ViewPropTypes","any","bool","func","number","oneOf","shape","string","isAndroid","test","navigator","userAgent","emptyObject","normalizeEventHandler","handler","e","nativeEvent","text","isSelectionStale","node","selection","selectionEnd","selectionStart","start","end","setSelection","setTimeout","setSelectionRange","TextInput","_Component","_this","_len","args","Array","_key","call","apply","_handleBlur","onBlur","props","_currentlyFocusedNode","_handleContentSizeChange","_this$props","onContentSizeChange","multiline","newHeight","_node","scrollHeight","newWidth","scrollWidth","_nodeHeight","_nodeWidth","contentSize","height","width","_handleChange","_this$props2","onChange","onChangeText","_handleSelectionChange","_handleFocus","_this$props3","clearTextOnFocus","onFocus","selectTextOnFocus","clear","select","_handleKeyDown","stopPropagation","metaKey","_handleKeyPress","_this$props4","blurOnSubmit","onKeyPress","onSubmitEditing","blurOnSubmitDefault","shouldBlurOnSubmit","keyValue","altKey","ctrlKey","shiftKey","isDefaultPrevented","preventDefault","blur","_this$props5","onSelectionChange","_this$props5$selectio","_setNode","component","_proto","isFocused","currentlyFocusedField","componentDidMount","document","activeElement","componentDidUpdate","render","_this$props6","autoComplete","autoCorrect","editable","keyboardType","numberOfLines","returnKeyType","secureTextEntry","onLayout","spellCheck","accessibilityViewIsModal","allowFontScaling","caretHidden","clearButtonMode","dataDetectorTypes","disableFullscreenUI","enablesReturnKeyAutomatically","hitSlop","inlineImageLeft","inlineImagePadding","inputAccessoryViewID","keyboardAppearance","maxFontSizeMultiplier","needsOffscreenAlphaCompositing","onAccessibilityTap","onEndEditing","onMagicTap","onScroll","removeClippedSubviews","renderToHardwareTextureAndroid","returnKeyLabel","scrollEnabled","selectionColor","selectionState","shouldRasterizeIOS","textBreakStrategy","textContentType","underlineColorAndroid","otherProps","type","_extends","classList","classes","textinput","dir","enterkeyhint","onKeyDown","onSelect","readOnly","ref","rows","displayName","defaultProps","autoCapitalize","State","propTypes","process","env","NODE_ENV","autoFocus","defaultValue","maxLength","placeholder","placeholderTextColor","isRequired","style","MozAppearance","WebkitAppearance","backgroundColor","border","borderRadius","boxSizing","font","padding","resize"],"sources":["/Users/wesli/Documents/GitHub/stuport2/node_modules/react-native-web/dist/exports/TextInput/index.js"],"sourcesContent":["function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport applyLayout from '../../modules/applyLayout';\nimport applyNativeMethods from '../../modules/applyNativeMethods';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport { Component } from 'react';\nimport ColorPropType from '../ColorPropType';\nimport createElement from '../createElement';\nimport css from '../StyleSheet/css';\nimport findNodeHandle from '../findNodeHandle';\nimport StyleSheetPropType from '../../modules/StyleSheetPropType';\nimport TextInputStylePropTypes from './TextInputStylePropTypes';\nimport TextInputState from '../../modules/TextInputState';\nimport ViewPropTypes from '../ViewPropTypes';\nimport { any, bool, func, number, oneOf, shape, string } from 'prop-types';\nvar isAndroid = canUseDOM && /Android/i.test(navigator && navigator.userAgent);\nvar emptyObject = {};\n/**\n * React Native events differ from W3C events.\n */\n\nvar normalizeEventHandler = function normalizeEventHandler(handler) {\n  return function (e) {\n    if (handler) {\n      e.nativeEvent.text = e.target.value;\n      return handler(e);\n    }\n  };\n};\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\n\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  if (node && selection) {\n    var selectionEnd = node.selectionEnd,\n        selectionStart = node.selectionStart;\n    var start = selection.start,\n        end = selection.end;\n    return start !== selectionStart || end !== selectionEnd;\n  }\n\n  return false;\n};\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\n\n\nvar setSelection = function setSelection(node, selection) {\n  try {\n    if (isSelectionStale(node, selection)) {\n      var start = selection.start,\n          end = selection.end; // workaround for Blink on Android: see https://github.com/text-mask/text-mask/issues/300\n\n      if (isAndroid) {\n        setTimeout(function () {\n          return node.setSelectionRange(start, end || start);\n        }, 10);\n      } else {\n        node.setSelectionRange(start, end || start);\n      }\n    }\n  } catch (e) {}\n};\n\nvar TextInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextInput, _Component);\n\n  function TextInput() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this._handleBlur = function (e) {\n      var onBlur = _this.props.onBlur;\n      TextInputState._currentlyFocusedNode = null;\n\n      if (onBlur) {\n        onBlur(e);\n      }\n    };\n\n    _this._handleContentSizeChange = function () {\n      var _this$props = _this.props,\n          onContentSizeChange = _this$props.onContentSizeChange,\n          multiline = _this$props.multiline;\n\n      if (multiline && onContentSizeChange) {\n        var newHeight = _this._node.scrollHeight;\n        var newWidth = _this._node.scrollWidth;\n\n        if (newHeight !== _this._nodeHeight || newWidth !== _this._nodeWidth) {\n          _this._nodeHeight = newHeight;\n          _this._nodeWidth = newWidth;\n          onContentSizeChange({\n            nativeEvent: {\n              contentSize: {\n                height: _this._nodeHeight,\n                width: _this._nodeWidth\n              }\n            }\n          });\n        }\n      }\n    };\n\n    _this._handleChange = function (e) {\n      var _this$props2 = _this.props,\n          onChange = _this$props2.onChange,\n          onChangeText = _this$props2.onChangeText;\n      var text = e.nativeEvent.text;\n\n      _this._handleContentSizeChange();\n\n      if (onChange) {\n        onChange(e);\n      }\n\n      if (onChangeText) {\n        onChangeText(text);\n      }\n\n      _this._handleSelectionChange(e);\n    };\n\n    _this._handleFocus = function (e) {\n      var _this$props3 = _this.props,\n          clearTextOnFocus = _this$props3.clearTextOnFocus,\n          onFocus = _this$props3.onFocus,\n          selectTextOnFocus = _this$props3.selectTextOnFocus;\n      var node = _this._node;\n      TextInputState._currentlyFocusedNode = _this._node;\n\n      if (onFocus) {\n        onFocus(e);\n      }\n\n      if (clearTextOnFocus) {\n        _this.clear();\n      }\n\n      if (selectTextOnFocus) {\n        node && node.select();\n      }\n    };\n\n    _this._handleKeyDown = function (e) {\n      // Prevent key events bubbling (see #612)\n      e.stopPropagation(); // Backspace, Escape, Tab, Cmd+Enter, and Arrow keys only fire 'keydown'\n      // DOM events\n\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowUp' || e.key === 'ArrowRight' || e.key === 'ArrowDown' || e.key === 'Backspace' || e.key === 'Escape' || e.key === 'Enter' && e.metaKey || e.key === 'Tab') {\n        _this._handleKeyPress(e);\n      }\n    };\n\n    _this._handleKeyPress = function (e) {\n      var _this$props4 = _this.props,\n          blurOnSubmit = _this$props4.blurOnSubmit,\n          multiline = _this$props4.multiline,\n          onKeyPress = _this$props4.onKeyPress,\n          onSubmitEditing = _this$props4.onSubmitEditing;\n      var blurOnSubmitDefault = !multiline;\n      var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n\n      if (onKeyPress) {\n        var keyValue = e.key;\n\n        if (keyValue) {\n          e.nativeEvent = {\n            altKey: e.altKey,\n            ctrlKey: e.ctrlKey,\n            key: keyValue,\n            metaKey: e.metaKey,\n            shiftKey: e.shiftKey,\n            target: e.target\n          };\n          onKeyPress(e);\n        }\n      }\n\n      if (!e.isDefaultPrevented() && e.key === 'Enter' && !e.shiftKey) {\n        if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n          // prevent \"Enter\" from inserting a newline\n          e.preventDefault();\n          e.nativeEvent = {\n            target: e.target,\n            text: e.target.value\n          };\n          onSubmitEditing(e);\n        }\n\n        if (shouldBlurOnSubmit) {\n          // $FlowFixMe\n          _this.blur();\n        }\n      }\n    };\n\n    _this._handleSelectionChange = function (e) {\n      var _this$props5 = _this.props,\n          onSelectionChange = _this$props5.onSelectionChange,\n          _this$props5$selectio = _this$props5.selection,\n          selection = _this$props5$selectio === void 0 ? emptyObject : _this$props5$selectio;\n\n      if (onSelectionChange) {\n        try {\n          var node = e.target;\n\n          if (isSelectionStale(node, selection)) {\n            var selectionStart = node.selectionStart,\n                selectionEnd = node.selectionEnd;\n            e.nativeEvent.selection = {\n              start: selectionStart,\n              end: selectionEnd\n            };\n            onSelectionChange(e);\n          }\n        } catch (e) {}\n      }\n    };\n\n    _this._setNode = function (component) {\n      _this._node = findNodeHandle(component);\n\n      if (_this._node) {\n        _this._handleContentSizeChange();\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = TextInput.prototype;\n\n  _proto.clear = function clear() {\n    this._node.value = '';\n  };\n\n  _proto.isFocused = function isFocused() {\n    return TextInputState.currentlyFocusedField() === this._node;\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    setSelection(this._node, this.props.selection);\n\n    if (document.activeElement === this._node) {\n      TextInputState._currentlyFocusedNode = this._node;\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    setSelection(this._node, this.props.selection);\n  };\n\n  _proto.render = function render() {\n    var _this$props6 = this.props,\n        autoComplete = _this$props6.autoComplete,\n        autoCorrect = _this$props6.autoCorrect,\n        editable = _this$props6.editable,\n        keyboardType = _this$props6.keyboardType,\n        multiline = _this$props6.multiline,\n        numberOfLines = _this$props6.numberOfLines,\n        returnKeyType = _this$props6.returnKeyType,\n        secureTextEntry = _this$props6.secureTextEntry,\n        blurOnSubmit = _this$props6.blurOnSubmit,\n        clearTextOnFocus = _this$props6.clearTextOnFocus,\n        onChangeText = _this$props6.onChangeText,\n        onLayout = _this$props6.onLayout,\n        onSelectionChange = _this$props6.onSelectionChange,\n        onSubmitEditing = _this$props6.onSubmitEditing,\n        selection = _this$props6.selection,\n        selectTextOnFocus = _this$props6.selectTextOnFocus,\n        spellCheck = _this$props6.spellCheck,\n        accessibilityViewIsModal = _this$props6.accessibilityViewIsModal,\n        allowFontScaling = _this$props6.allowFontScaling,\n        caretHidden = _this$props6.caretHidden,\n        clearButtonMode = _this$props6.clearButtonMode,\n        dataDetectorTypes = _this$props6.dataDetectorTypes,\n        disableFullscreenUI = _this$props6.disableFullscreenUI,\n        enablesReturnKeyAutomatically = _this$props6.enablesReturnKeyAutomatically,\n        hitSlop = _this$props6.hitSlop,\n        inlineImageLeft = _this$props6.inlineImageLeft,\n        inlineImagePadding = _this$props6.inlineImagePadding,\n        inputAccessoryViewID = _this$props6.inputAccessoryViewID,\n        keyboardAppearance = _this$props6.keyboardAppearance,\n        maxFontSizeMultiplier = _this$props6.maxFontSizeMultiplier,\n        needsOffscreenAlphaCompositing = _this$props6.needsOffscreenAlphaCompositing,\n        onAccessibilityTap = _this$props6.onAccessibilityTap,\n        onContentSizeChange = _this$props6.onContentSizeChange,\n        onEndEditing = _this$props6.onEndEditing,\n        onMagicTap = _this$props6.onMagicTap,\n        onScroll = _this$props6.onScroll,\n        removeClippedSubviews = _this$props6.removeClippedSubviews,\n        renderToHardwareTextureAndroid = _this$props6.renderToHardwareTextureAndroid,\n        returnKeyLabel = _this$props6.returnKeyLabel,\n        scrollEnabled = _this$props6.scrollEnabled,\n        selectionColor = _this$props6.selectionColor,\n        selectionState = _this$props6.selectionState,\n        shouldRasterizeIOS = _this$props6.shouldRasterizeIOS,\n        textBreakStrategy = _this$props6.textBreakStrategy,\n        textContentType = _this$props6.textContentType,\n        underlineColorAndroid = _this$props6.underlineColorAndroid,\n        otherProps = _objectWithoutPropertiesLoose(_this$props6, [\"autoComplete\", \"autoCorrect\", \"editable\", \"keyboardType\", \"multiline\", \"numberOfLines\", \"returnKeyType\", \"secureTextEntry\", \"blurOnSubmit\", \"clearTextOnFocus\", \"onChangeText\", \"onLayout\", \"onSelectionChange\", \"onSubmitEditing\", \"selection\", \"selectTextOnFocus\", \"spellCheck\", \"accessibilityViewIsModal\", \"allowFontScaling\", \"caretHidden\", \"clearButtonMode\", \"dataDetectorTypes\", \"disableFullscreenUI\", \"enablesReturnKeyAutomatically\", \"hitSlop\", \"inlineImageLeft\", \"inlineImagePadding\", \"inputAccessoryViewID\", \"keyboardAppearance\", \"maxFontSizeMultiplier\", \"needsOffscreenAlphaCompositing\", \"onAccessibilityTap\", \"onContentSizeChange\", \"onEndEditing\", \"onMagicTap\", \"onScroll\", \"removeClippedSubviews\", \"renderToHardwareTextureAndroid\", \"returnKeyLabel\", \"scrollEnabled\", \"selectionColor\", \"selectionState\", \"shouldRasterizeIOS\", \"textBreakStrategy\", \"textContentType\", \"underlineColorAndroid\"]);\n\n    var type;\n\n    switch (keyboardType) {\n      case 'email-address':\n        type = 'email';\n        break;\n\n      case 'number-pad':\n      case 'numeric':\n        type = 'number';\n        break;\n\n      case 'phone-pad':\n        type = 'tel';\n        break;\n\n      case 'search':\n      case 'web-search':\n        type = 'search';\n        break;\n\n      case 'url':\n        type = 'url';\n        break;\n\n      default:\n        type = 'text';\n    }\n\n    if (secureTextEntry) {\n      type = 'password';\n    }\n\n    var component = multiline ? 'textarea' : 'input';\n    Object.assign(otherProps, {\n      // Browser's treat autocomplete \"off\" as \"on\"\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=468153#c164\n      autoComplete: autoComplete === 'off' ? 'noop' : autoComplete,\n      autoCorrect: autoCorrect ? 'on' : 'off',\n      classList: [classes.textinput],\n      dir: 'auto',\n      enterkeyhint: returnKeyType,\n      onBlur: normalizeEventHandler(this._handleBlur),\n      onChange: normalizeEventHandler(this._handleChange),\n      onFocus: normalizeEventHandler(this._handleFocus),\n      onKeyDown: this._handleKeyDown,\n      onKeyPress: this._handleKeyPress,\n      onSelect: normalizeEventHandler(this._handleSelectionChange),\n      readOnly: !editable,\n      ref: this._setNode,\n      spellCheck: spellCheck != null ? spellCheck : autoCorrect\n    });\n\n    if (multiline) {\n      otherProps.rows = numberOfLines;\n    } else {\n      otherProps.type = type;\n    }\n\n    return createElement(component, otherProps);\n  };\n\n  return TextInput;\n}(Component);\n\nTextInput.displayName = 'TextInput';\nTextInput.defaultProps = {\n  autoCapitalize: 'sentences',\n  autoComplete: 'on',\n  autoCorrect: true,\n  editable: true,\n  keyboardType: 'default',\n  multiline: false,\n  numberOfLines: 1,\n  secureTextEntry: false\n};\nTextInput.State = TextInputState;\nTextInput.propTypes = process.env.NODE_ENV !== \"production\" ? _objectSpread({}, ViewPropTypes, {\n  autoCapitalize: oneOf(['characters', 'none', 'sentences', 'words']),\n  autoComplete: string,\n  autoCorrect: bool,\n  autoFocus: bool,\n  blurOnSubmit: bool,\n  clearTextOnFocus: bool,\n  defaultValue: string,\n  editable: bool,\n  inputAccessoryViewID: string,\n  keyboardType: oneOf(['default', 'email-address', 'number-pad', 'numbers-and-punctuation', 'numeric', 'phone-pad', 'search', 'url', 'web-search']),\n  maxFontSizeMultiplier: number,\n  maxLength: number,\n  multiline: bool,\n  numberOfLines: number,\n  onBlur: func,\n  onChange: func,\n  onChangeText: func,\n  onFocus: func,\n  onKeyPress: func,\n  onSelectionChange: func,\n  onSubmitEditing: func,\n  placeholder: string,\n  placeholderTextColor: ColorPropType,\n  returnKeyType: oneOf(['enter', 'done', 'go', 'next', 'previous', 'search', 'send']),\n  secureTextEntry: bool,\n  selectTextOnFocus: bool,\n  selection: shape({\n    start: number.isRequired,\n    end: number\n  }),\n  spellCheck: bool,\n  style: StyleSheetPropType(TextInputStylePropTypes),\n  value: string,\n\n  /* react-native compat */\n\n  /* eslint-disable */\n  caretHidden: bool,\n  clearButtonMode: string,\n  dataDetectorTypes: string,\n  disableFullscreenUI: bool,\n  enablesReturnKeyAutomatically: bool,\n  keyboardAppearance: string,\n  inlineImageLeft: string,\n  inlineImagePadding: number,\n  onContentSizeChange: func,\n  onEndEditing: func,\n  onScroll: func,\n  returnKeyLabel: string,\n  selectionColor: ColorPropType,\n  selectionState: any,\n  textBreakStrategy: string,\n  underlineColorAndroid: ColorPropType\n  /* eslint-enable */\n\n}) : {};\nvar classes = css.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    padding: 0,\n    resize: 'none'\n  }\n});\nexport default applyLayout(applyNativeMethods(TextInput));"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}