{"ast":null,"code":"var dataUriPattern = /^data:/;\nvar ImageUriCache = function () {\n  function ImageUriCache() {}\n  ImageUriCache.has = function has(uri) {\n    var entries = ImageUriCache._entries;\n    var isDataUri = dataUriPattern.test(uri);\n    return isDataUri || Boolean(entries[uri]);\n  };\n  ImageUriCache.add = function add(uri) {\n    var entries = ImageUriCache._entries;\n    var lastUsedTimestamp = Date.now();\n    if (entries[uri]) {\n      entries[uri].lastUsedTimestamp = lastUsedTimestamp;\n      entries[uri].refCount += 1;\n    } else {\n      entries[uri] = {\n        lastUsedTimestamp: lastUsedTimestamp,\n        refCount: 1\n      };\n    }\n  };\n  ImageUriCache.remove = function remove(uri) {\n    var entries = ImageUriCache._entries;\n    if (entries[uri]) {\n      entries[uri].refCount -= 1;\n    }\n    ImageUriCache._cleanUpIfNeeded();\n  };\n  ImageUriCache._cleanUpIfNeeded = function _cleanUpIfNeeded() {\n    var entries = ImageUriCache._entries;\n    var imageUris = Object.keys(entries);\n    if (imageUris.length + 1 > ImageUriCache._maximumEntries) {\n      var leastRecentlyUsedKey;\n      var leastRecentlyUsedEntry;\n      imageUris.forEach(function (uri) {\n        var entry = entries[uri];\n        if ((!leastRecentlyUsedEntry || entry.lastUsedTimestamp < leastRecentlyUsedEntry.lastUsedTimestamp) && entry.refCount === 0) {\n          leastRecentlyUsedKey = uri;\n          leastRecentlyUsedEntry = entry;\n        }\n      });\n      if (leastRecentlyUsedKey) {\n        delete entries[leastRecentlyUsedKey];\n      }\n    }\n  };\n  return ImageUriCache;\n}();\nImageUriCache._maximumEntries = 256;\nImageUriCache._entries = {};\nexport { ImageUriCache as default };","map":{"version":3,"names":["dataUriPattern","ImageUriCache","has","uri","entries","_entries","isDataUri","test","Boolean","add","lastUsedTimestamp","Date","now","refCount","remove","_cleanUpIfNeeded","imageUris","Object","keys","length","_maximumEntries","leastRecentlyUsedKey","leastRecentlyUsedEntry","forEach","entry","default"],"sources":["/Users/wesli/Documents/GitHub/stuport2/node_modules/react-native-web/dist/exports/Image/ImageUriCache.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar dataUriPattern = /^data:/;\n\nvar ImageUriCache =\n/*#__PURE__*/\nfunction () {\n  function ImageUriCache() {}\n\n  ImageUriCache.has = function has(uri) {\n    var entries = ImageUriCache._entries;\n    var isDataUri = dataUriPattern.test(uri);\n    return isDataUri || Boolean(entries[uri]);\n  };\n\n  ImageUriCache.add = function add(uri) {\n    var entries = ImageUriCache._entries;\n    var lastUsedTimestamp = Date.now();\n\n    if (entries[uri]) {\n      entries[uri].lastUsedTimestamp = lastUsedTimestamp;\n      entries[uri].refCount += 1;\n    } else {\n      entries[uri] = {\n        lastUsedTimestamp: lastUsedTimestamp,\n        refCount: 1\n      };\n    }\n  };\n\n  ImageUriCache.remove = function remove(uri) {\n    var entries = ImageUriCache._entries;\n\n    if (entries[uri]) {\n      entries[uri].refCount -= 1;\n    } // Free up entries when the cache is \"full\"\n\n\n    ImageUriCache._cleanUpIfNeeded();\n  };\n\n  ImageUriCache._cleanUpIfNeeded = function _cleanUpIfNeeded() {\n    var entries = ImageUriCache._entries;\n    var imageUris = Object.keys(entries);\n\n    if (imageUris.length + 1 > ImageUriCache._maximumEntries) {\n      var leastRecentlyUsedKey;\n      var leastRecentlyUsedEntry;\n      imageUris.forEach(function (uri) {\n        var entry = entries[uri];\n\n        if ((!leastRecentlyUsedEntry || entry.lastUsedTimestamp < leastRecentlyUsedEntry.lastUsedTimestamp) && entry.refCount === 0) {\n          leastRecentlyUsedKey = uri;\n          leastRecentlyUsedEntry = entry;\n        }\n      });\n\n      if (leastRecentlyUsedKey) {\n        delete entries[leastRecentlyUsedKey];\n      }\n    }\n  };\n\n  return ImageUriCache;\n}();\n\nImageUriCache._maximumEntries = 256;\nImageUriCache._entries = {};\nexport { ImageUriCache as default };"],"mappings":"AAQA,IAAIA,cAAc,GAAG,QAAQ;AAE7B,IAAIC,aAAa,GAEjB,YAAY;EACV,SAASA,aAAaA,CAAA,EAAG,CAAC;EAE1BA,aAAa,CAACC,GAAG,GAAG,SAASA,GAAGA,CAACC,GAAG,EAAE;IACpC,IAAIC,OAAO,GAAGH,aAAa,CAACI,QAAQ;IACpC,IAAIC,SAAS,GAAGN,cAAc,CAACO,IAAI,CAACJ,GAAG,CAAC;IACxC,OAAOG,SAAS,IAAIE,OAAO,CAACJ,OAAO,CAACD,GAAG,CAAC,CAAC;EAC3C,CAAC;EAEDF,aAAa,CAACQ,GAAG,GAAG,SAASA,GAAGA,CAACN,GAAG,EAAE;IACpC,IAAIC,OAAO,GAAGH,aAAa,CAACI,QAAQ;IACpC,IAAIK,iBAAiB,GAAGC,IAAI,CAACC,GAAG,EAAE;IAElC,IAAIR,OAAO,CAACD,GAAG,CAAC,EAAE;MAChBC,OAAO,CAACD,GAAG,CAAC,CAACO,iBAAiB,GAAGA,iBAAiB;MAClDN,OAAO,CAACD,GAAG,CAAC,CAACU,QAAQ,IAAI,CAAC;IAC5B,CAAC,MAAM;MACLT,OAAO,CAACD,GAAG,CAAC,GAAG;QACbO,iBAAiB,EAAEA,iBAAiB;QACpCG,QAAQ,EAAE;MACZ,CAAC;IACH;EACF,CAAC;EAEDZ,aAAa,CAACa,MAAM,GAAG,SAASA,MAAMA,CAACX,GAAG,EAAE;IAC1C,IAAIC,OAAO,GAAGH,aAAa,CAACI,QAAQ;IAEpC,IAAID,OAAO,CAACD,GAAG,CAAC,EAAE;MAChBC,OAAO,CAACD,GAAG,CAAC,CAACU,QAAQ,IAAI,CAAC;IAC5B;IAGAZ,aAAa,CAACc,gBAAgB,EAAE;EAClC,CAAC;EAEDd,aAAa,CAACc,gBAAgB,GAAG,SAASA,gBAAgBA,CAAA,EAAG;IAC3D,IAAIX,OAAO,GAAGH,aAAa,CAACI,QAAQ;IACpC,IAAIW,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACd,OAAO,CAAC;IAEpC,IAAIY,SAAS,CAACG,MAAM,GAAG,CAAC,GAAGlB,aAAa,CAACmB,eAAe,EAAE;MACxD,IAAIC,oBAAoB;MACxB,IAAIC,sBAAsB;MAC1BN,SAAS,CAACO,OAAO,CAAC,UAAUpB,GAAG,EAAE;QAC/B,IAAIqB,KAAK,GAAGpB,OAAO,CAACD,GAAG,CAAC;QAExB,IAAI,CAAC,CAACmB,sBAAsB,IAAIE,KAAK,CAACd,iBAAiB,GAAGY,sBAAsB,CAACZ,iBAAiB,KAAKc,KAAK,CAACX,QAAQ,KAAK,CAAC,EAAE;UAC3HQ,oBAAoB,GAAGlB,GAAG;UAC1BmB,sBAAsB,GAAGE,KAAK;QAChC;MACF,CAAC,CAAC;MAEF,IAAIH,oBAAoB,EAAE;QACxB,OAAOjB,OAAO,CAACiB,oBAAoB,CAAC;MACtC;IACF;EACF,CAAC;EAED,OAAOpB,aAAa;AACtB,CAAC,EAAE;AAEHA,aAAa,CAACmB,eAAe,GAAG,GAAG;AACnCnB,aAAa,CAACI,QAAQ,GAAG,CAAC,CAAC;AAC3B,SAASJ,aAAa,IAAIwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}